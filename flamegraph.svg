<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="789.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="20726"><g><title>gameboy-emulator`DYLD-STUB$$free (16 samples, 0.08%)</title><rect x="0.0000%" y="645" width="0.0772%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="16"/><text x="0.2500%" y="655.50"></text></g><g><title>gameboy-emulator`__rdl_dealloc (5 samples, 0.02%)</title><rect x="0.0772%" y="645" width="0.0241%" height="15" fill="rgb(217,0,24)" fg:x="16" fg:w="5"/><text x="0.3272%" y="655.50"></text></g><g><title>gameboy-emulator`__rust_dealloc (36 samples, 0.17%)</title><rect x="0.1013%" y="645" width="0.1737%" height="15" fill="rgb(221,193,54)" fg:x="21" fg:w="36"/><text x="0.3513%" y="655.50"></text></g><g><title>gameboy-emulator`DYLD-STUB$$malloc (3 samples, 0.01%)</title><rect x="1.3268%" y="629" width="0.0145%" height="15" fill="rgb(248,212,6)" fg:x="275" fg:w="3"/><text x="1.5768%" y="639.50"></text></g><g><title>gameboy-emulator`DYLD-STUB$$memcpy (9 samples, 0.04%)</title><rect x="1.3413%" y="629" width="0.0434%" height="15" fill="rgb(208,68,35)" fg:x="278" fg:w="9"/><text x="1.5913%" y="639.50"></text></g><g><title>gameboy-emulator`__rdl_alloc (40 samples, 0.19%)</title><rect x="1.3847%" y="629" width="0.1930%" height="15" fill="rgb(232,128,0)" fg:x="287" fg:w="40"/><text x="1.6347%" y="639.50"></text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::cpu::Cpu::get_data (438 samples, 2.11%)</title><rect x="20.0280%" y="613" width="2.1133%" height="15" fill="rgb(207,160,47)" fg:x="4151" fg:w="438"/><text x="20.2780%" y="623.50">g..</text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::memory::MemoryBus::read_u8 (105 samples, 0.51%)</title><rect x="21.6347%" y="597" width="0.5066%" height="15" fill="rgb(228,23,34)" fg:x="4484" fg:w="105"/><text x="21.8847%" y="607.50"></text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::debugger::Debugger::push_call_log (163 samples, 0.79%)</title><rect x="22.1413%" y="613" width="0.7865%" height="15" fill="rgb(218,30,26)" fg:x="4589" fg:w="163"/><text x="22.3913%" y="623.50"></text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::memory::MemoryBus::read_u8 (213 samples, 1.03%)</title><rect x="22.9277%" y="613" width="1.0277%" height="15" fill="rgb(220,122,19)" fg:x="4752" fg:w="213"/><text x="23.1777%" y="623.50"></text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::cpu::Cpu::execute_next_opcode (5,646 samples, 27.24%)</title><rect x="1.5874%" y="629" width="27.2411%" height="15" fill="rgb(250,228,42)" fg:x="329" fg:w="5646"/><text x="1.8374%" y="639.50">gameboy-emulator`gameboy_emulator::emulator:..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (1,010 samples, 4.87%)</title><rect x="23.9554%" y="613" width="4.8731%" height="15" fill="rgb(240,193,28)" fg:x="4965" fg:w="1010"/><text x="24.2054%" y="623.50">libsys..</text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::cpu::Cpu::get_data (55 samples, 0.27%)</title><rect x="28.8285%" y="629" width="0.2654%" height="15" fill="rgb(216,20,37)" fg:x="5975" fg:w="55"/><text x="29.0785%" y="639.50"></text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::debugger::Debugger::push_call_log (10 samples, 0.05%)</title><rect x="29.0939%" y="629" width="0.0482%" height="15" fill="rgb(206,188,39)" fg:x="6030" fg:w="10"/><text x="29.3439%" y="639.50"></text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::memory::MemoryBus::read_u8 (149 samples, 0.72%)</title><rect x="29.1421%" y="629" width="0.7189%" height="15" fill="rgb(217,207,13)" fg:x="6040" fg:w="149"/><text x="29.3921%" y="639.50"></text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::memory::MemoryBus::write_u8 (9 samples, 0.04%)</title><rect x="29.8610%" y="629" width="0.0434%" height="15" fill="rgb(231,73,38)" fg:x="6189" fg:w="9"/><text x="30.1110%" y="639.50"></text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::memory::MemoryBus::read_u8 (2,442 samples, 11.78%)</title><rect x="60.9380%" y="613" width="11.7823%" height="15" fill="rgb(225,20,46)" fg:x="12630" fg:w="2442"/><text x="61.1880%" y="623.50">gameboy-emulator`..</text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::ppu::Ppu::update_graphics (8,876 samples, 42.83%)</title><rect x="29.9045%" y="629" width="42.8254%" height="15" fill="rgb(210,31,41)" fg:x="6198" fg:w="8876"/><text x="30.1545%" y="639.50">gameboy-emulator`gameboy_emulator::emulator::ppu::Ppu::update_graphics</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (104 samples, 0.50%)</title><rect x="72.7299%" y="629" width="0.5018%" height="15" fill="rgb(221,200,47)" fg:x="15074" fg:w="104"/><text x="72.9799%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1,022 samples, 4.93%)</title><rect x="73.2317%" y="629" width="4.9310%" height="15" fill="rgb(226,26,5)" fg:x="15178" fg:w="1022"/><text x="73.4817%" y="639.50">libsys..</text></g><g><title>libsystem_malloc.dylib`malloc (39 samples, 0.19%)</title><rect x="78.1627%" y="629" width="0.1882%" height="15" fill="rgb(249,33,26)" fg:x="16200" fg:w="39"/><text x="78.4127%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (37 samples, 0.18%)</title><rect x="78.3509%" y="629" width="0.1785%" height="15" fill="rgb(235,183,28)" fg:x="16239" fg:w="37"/><text x="78.6009%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_should_clear (16 samples, 0.08%)</title><rect x="78.5439%" y="613" width="0.0772%" height="15" fill="rgb(221,5,38)" fg:x="16279" fg:w="16"/><text x="78.7939%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`medium_malloc_from_free_list (13 samples, 0.06%)</title><rect x="78.5583%" y="597" width="0.0627%" height="15" fill="rgb(247,18,42)" fg:x="16282" fg:w="13"/><text x="78.8083%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (21 samples, 0.10%)</title><rect x="78.5294%" y="629" width="0.1013%" height="15" fill="rgb(241,131,45)" fg:x="16276" fg:w="21"/><text x="78.7794%" y="639.50"></text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::Emulator::update (16,475 samples, 79.49%)</title><rect x="0.2798%" y="645" width="79.4895%" height="15" fill="rgb(249,31,29)" fg:x="58" fg:w="16475"/><text x="0.5298%" y="655.50">gameboy-emulator`gameboy_emulator::emulator::Emulator::update</text></g><g><title>libsystem_platform.dylib`_platform_memmove (236 samples, 1.14%)</title><rect x="78.6307%" y="629" width="1.1387%" height="15" fill="rgb(225,111,53)" fg:x="16297" fg:w="236"/><text x="78.8807%" y="639.50"></text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::Emulator::update_debug_view (5 samples, 0.02%)</title><rect x="79.7694%" y="645" width="0.0241%" height="15" fill="rgb(238,160,17)" fg:x="16533" fg:w="5"/><text x="80.0194%" y="655.50"></text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::cpu::Cpu::execute_next_opcode (107 samples, 0.52%)</title><rect x="79.7983%" y="645" width="0.5163%" height="15" fill="rgb(214,148,48)" fg:x="16539" fg:w="107"/><text x="80.0483%" y="655.50"></text></g><g><title>gameboy-emulator`gameboy_emulator::emulator::ppu::Ppu::update_graphics (108 samples, 0.52%)</title><rect x="80.3435%" y="645" width="0.5211%" height="15" fill="rgb(232,36,49)" fg:x="16652" fg:w="108"/><text x="80.5935%" y="655.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (8 samples, 0.04%)</title><rect x="80.8839%" y="597" width="0.0386%" height="15" fill="rgb(209,103,24)" fg:x="16764" fg:w="8"/><text x="81.1339%" y="607.50"></text></g><g><title>AppKit`-[NSApplication init] (8 samples, 0.04%)</title><rect x="80.8839%" y="581" width="0.0386%" height="15" fill="rgb(229,88,8)" fg:x="16764" fg:w="8"/><text x="81.1339%" y="591.50"></text></g><g><title>AppKit`+[NSMenuItem separatorItem] (4 samples, 0.02%)</title><rect x="80.9225%" y="597" width="0.0193%" height="15" fill="rgb(213,181,19)" fg:x="16772" fg:w="4"/><text x="81.1725%" y="607.50"></text></g><g><title>AppKit`-[NSMenuItem _configureAsSeparatorItem] (4 samples, 0.02%)</title><rect x="80.9225%" y="581" width="0.0193%" height="15" fill="rgb(254,191,54)" fg:x="16772" fg:w="4"/><text x="81.1725%" y="591.50"></text></g><g><title>AppKit`-[NSMenuItem setTitle:] (4 samples, 0.02%)</title><rect x="80.9225%" y="565" width="0.0193%" height="15" fill="rgb(241,83,37)" fg:x="16772" fg:w="4"/><text x="81.1725%" y="575.50"></text></g><g><title>Foundation`_NSFaultInObject (4 samples, 0.02%)</title><rect x="80.9225%" y="549" width="0.0193%" height="15" fill="rgb(233,36,39)" fg:x="16772" fg:w="4"/><text x="81.1725%" y="559.50"></text></g><g><title>AppKit`-[NSExtraMIData init] (4 samples, 0.02%)</title><rect x="80.9225%" y="533" width="0.0193%" height="15" fill="rgb(226,3,54)" fg:x="16772" fg:w="4"/><text x="81.1725%" y="543.50"></text></g><g><title>AppKit`+[NSImage imageNamed:] (4 samples, 0.02%)</title><rect x="80.9225%" y="517" width="0.0193%" height="15" fill="rgb(245,192,40)" fg:x="16772" fg:w="4"/><text x="81.1725%" y="527.50"></text></g><g><title>AppKit`+[NSImage _systemImageNamed:] (4 samples, 0.02%)</title><rect x="80.9225%" y="501" width="0.0193%" height="15" fill="rgb(238,167,29)" fg:x="16772" fg:w="4"/><text x="81.1725%" y="511.50"></text></g><g><title>AppKit`+[NSImage(NSSymbolImages) _symbolCompatibilityImageNamed:] (3 samples, 0.01%)</title><rect x="80.9273%" y="485" width="0.0145%" height="15" fill="rgb(232,182,51)" fg:x="16773" fg:w="3"/><text x="81.1773%" y="495.50"></text></g><g><title>AppKit`catalogWithSystemSymbolName (3 samples, 0.01%)</title><rect x="80.9273%" y="469" width="0.0145%" height="15" fill="rgb(231,60,39)" fg:x="16773" fg:w="3"/><text x="81.1773%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.01%)</title><rect x="80.9273%" y="453" width="0.0145%" height="15" fill="rgb(208,69,12)" fg:x="16773" fg:w="3"/><text x="81.1773%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.01%)</title><rect x="80.9273%" y="437" width="0.0145%" height="15" fill="rgb(235,93,37)" fg:x="16773" fg:w="3"/><text x="81.1773%" y="447.50"></text></g><g><title>AppKit`__NSImageGetCoreGlyphsCatalog_block_invoke (3 samples, 0.01%)</title><rect x="80.9273%" y="421" width="0.0145%" height="15" fill="rgb(213,116,39)" fg:x="16773" fg:w="3"/><text x="81.1773%" y="431.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _customizeMainMenu] (3 samples, 0.01%)</title><rect x="80.9515%" y="581" width="0.0145%" height="15" fill="rgb(222,207,29)" fg:x="16778" fg:w="3"/><text x="81.2015%" y="591.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _addTextInputMenuItems:] (3 samples, 0.01%)</title><rect x="80.9515%" y="565" width="0.0145%" height="15" fill="rgb(206,96,30)" fg:x="16778" fg:w="3"/><text x="81.2015%" y="575.50"></text></g><g><title>AppKit`+[NSTextView(NSTextView_WritingTools) _supportsWritingTools] (3 samples, 0.01%)</title><rect x="80.9515%" y="549" width="0.0145%" height="15" fill="rgb(218,138,4)" fg:x="16778" fg:w="3"/><text x="81.2015%" y="559.50"></text></g><g><title>AppKit`-[NSApplication finishLaunching] (5 samples, 0.02%)</title><rect x="80.9466%" y="597" width="0.0241%" height="15" fill="rgb(250,191,14)" fg:x="16777" fg:w="5"/><text x="81.1966%" y="607.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (5 samples, 0.02%)</title><rect x="80.9804%" y="517" width="0.0241%" height="15" fill="rgb(239,60,40)" fg:x="16784" fg:w="5"/><text x="81.2304%" y="527.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (5 samples, 0.02%)</title><rect x="80.9804%" y="501" width="0.0241%" height="15" fill="rgb(206,27,48)" fg:x="16784" fg:w="5"/><text x="81.2304%" y="511.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (5 samples, 0.02%)</title><rect x="80.9804%" y="485" width="0.0241%" height="15" fill="rgb(225,35,8)" fg:x="16784" fg:w="5"/><text x="81.2304%" y="495.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (5 samples, 0.02%)</title><rect x="80.9804%" y="469" width="0.0241%" height="15" fill="rgb(250,213,24)" fg:x="16784" fg:w="5"/><text x="81.2304%" y="479.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (5 samples, 0.02%)</title><rect x="80.9804%" y="453" width="0.0241%" height="15" fill="rgb(247,123,22)" fg:x="16784" fg:w="5"/><text x="81.2304%" y="463.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (5 samples, 0.02%)</title><rect x="80.9804%" y="437" width="0.0241%" height="15" fill="rgb(231,138,38)" fg:x="16784" fg:w="5"/><text x="81.2304%" y="447.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (5 samples, 0.02%)</title><rect x="80.9804%" y="421" width="0.0241%" height="15" fill="rgb(231,145,46)" fg:x="16784" fg:w="5"/><text x="81.2304%" y="431.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (5 samples, 0.02%)</title><rect x="80.9804%" y="405" width="0.0241%" height="15" fill="rgb(251,118,11)" fg:x="16784" fg:w="5"/><text x="81.2304%" y="415.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (7 samples, 0.03%)</title><rect x="80.9804%" y="533" width="0.0338%" height="15" fill="rgb(217,147,25)" fg:x="16784" fg:w="7"/><text x="81.2304%" y="543.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (11 samples, 0.05%)</title><rect x="80.9804%" y="549" width="0.0531%" height="15" fill="rgb(247,81,37)" fg:x="16784" fg:w="11"/><text x="81.2304%" y="559.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (4 samples, 0.02%)</title><rect x="81.0142%" y="533" width="0.0193%" height="15" fill="rgb(209,12,38)" fg:x="16791" fg:w="4"/><text x="81.2642%" y="543.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (4 samples, 0.02%)</title><rect x="81.0142%" y="517" width="0.0193%" height="15" fill="rgb(227,1,9)" fg:x="16791" fg:w="4"/><text x="81.2642%" y="527.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (4 samples, 0.02%)</title><rect x="81.0142%" y="501" width="0.0193%" height="15" fill="rgb(248,47,43)" fg:x="16791" fg:w="4"/><text x="81.2642%" y="511.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (16 samples, 0.08%)</title><rect x="80.9756%" y="597" width="0.0772%" height="15" fill="rgb(221,10,30)" fg:x="16783" fg:w="16"/><text x="81.2256%" y="607.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (16 samples, 0.08%)</title><rect x="80.9756%" y="581" width="0.0772%" height="15" fill="rgb(210,229,1)" fg:x="16783" fg:w="16"/><text x="81.2256%" y="591.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (15 samples, 0.07%)</title><rect x="80.9804%" y="565" width="0.0724%" height="15" fill="rgb(222,148,37)" fg:x="16784" fg:w="15"/><text x="81.2304%" y="575.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (3 samples, 0.01%)</title><rect x="81.0383%" y="549" width="0.0145%" height="15" fill="rgb(234,67,33)" fg:x="16796" fg:w="3"/><text x="81.2883%" y="559.50"></text></g><g><title>Metal`MTLCreateSystemDefaultDevice (4 samples, 0.02%)</title><rect x="81.0721%" y="597" width="0.0193%" height="15" fill="rgb(247,98,35)" fg:x="16803" fg:w="4"/><text x="81.3221%" y="607.50"></text></g><g><title>Metal`MTLRegisterDevices (3 samples, 0.01%)</title><rect x="81.0769%" y="581" width="0.0145%" height="15" fill="rgb(247,138,52)" fg:x="16804" fg:w="3"/><text x="81.3269%" y="591.50"></text></g><g><title>Metal`-[MTLIOAccelServiceGlobalContext init] (3 samples, 0.01%)</title><rect x="81.0769%" y="565" width="0.0145%" height="15" fill="rgb(213,79,30)" fg:x="16804" fg:w="3"/><text x="81.3269%" y="575.50"></text></g><g><title>gameboy-emulator`minifb::Window::new (49 samples, 0.24%)</title><rect x="80.8646%" y="629" width="0.2364%" height="15" fill="rgb(246,177,23)" fg:x="16760" fg:w="49"/><text x="81.1146%" y="639.50"></text></g><g><title>gameboy-emulator`mfb_open (48 samples, 0.23%)</title><rect x="80.8694%" y="613" width="0.2316%" height="15" fill="rgb(230,62,27)" fg:x="16761" fg:w="48"/><text x="81.1194%" y="623.50"></text></g><g><title>gameboy-emulator`simple_graphics::display::Display::new (50 samples, 0.24%)</title><rect x="80.8646%" y="645" width="0.2412%" height="15" fill="rgb(216,154,8)" fg:x="16760" fg:w="50"/><text x="81.1146%" y="655.50"></text></g><g><title>CoreFoundation`CFSetGetValue (4 samples, 0.02%)</title><rect x="81.1252%" y="421" width="0.0193%" height="15" fill="rgb(244,35,45)" fg:x="16814" fg:w="4"/><text x="81.3752%" y="431.50"></text></g><g><title>CoreFoundation`___CFBasicHashFindBucket_Linear (3 samples, 0.01%)</title><rect x="81.1300%" y="405" width="0.0145%" height="15" fill="rgb(251,115,12)" fg:x="16815" fg:w="3"/><text x="81.3800%" y="415.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (6 samples, 0.03%)</title><rect x="81.1252%" y="437" width="0.0289%" height="15" fill="rgb(240,54,50)" fg:x="16814" fg:w="6"/><text x="81.3752%" y="447.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (10 samples, 0.05%)</title><rect x="81.1107%" y="501" width="0.0482%" height="15" fill="rgb(233,84,52)" fg:x="16811" fg:w="10"/><text x="81.3607%" y="511.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (10 samples, 0.05%)</title><rect x="81.1107%" y="485" width="0.0482%" height="15" fill="rgb(207,117,47)" fg:x="16811" fg:w="10"/><text x="81.3607%" y="495.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (10 samples, 0.05%)</title><rect x="81.1107%" y="469" width="0.0482%" height="15" fill="rgb(249,43,39)" fg:x="16811" fg:w="10"/><text x="81.3607%" y="479.50"></text></g><g><title>CoreFoundation`CFRunLoopAddObserver (9 samples, 0.04%)</title><rect x="81.1155%" y="453" width="0.0434%" height="15" fill="rgb(209,38,44)" fg:x="16812" fg:w="9"/><text x="81.3655%" y="463.50"></text></g><g><title>CoreFoundation`CFRunLoopAddObserver (13 samples, 0.06%)</title><rect x="81.1107%" y="517" width="0.0627%" height="15" fill="rgb(236,212,23)" fg:x="16811" fg:w="13"/><text x="81.3607%" y="527.50"></text></g><g><title>CoreFoundation`CFSetCreateCopy (3 samples, 0.01%)</title><rect x="81.1589%" y="501" width="0.0145%" height="15" fill="rgb(242,79,21)" fg:x="16821" fg:w="3"/><text x="81.4089%" y="511.50"></text></g><g><title>AppKit`+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink] (14 samples, 0.07%)</title><rect x="81.1107%" y="533" width="0.0675%" height="15" fill="rgb(211,96,35)" fg:x="16811" fg:w="14"/><text x="81.3607%" y="543.50"></text></g><g><title>AppKit`+[_NSCGSTransaction currentTransaction] (3 samples, 0.01%)</title><rect x="81.1782%" y="517" width="0.0145%" height="15" fill="rgb(253,215,40)" fg:x="16825" fg:w="3"/><text x="81.4282%" y="527.50"></text></g><g><title>AppKit`NSCGSTransactionEnsureAttachment (4 samples, 0.02%)</title><rect x="81.1782%" y="533" width="0.0193%" height="15" fill="rgb(211,81,21)" fg:x="16825" fg:w="4"/><text x="81.4282%" y="543.50"></text></g><g><title>AppKit`+[NSDisplayCycle currentDisplayCycle] (22 samples, 0.11%)</title><rect x="81.1107%" y="549" width="0.1061%" height="15" fill="rgb(208,190,38)" fg:x="16811" fg:w="22"/><text x="81.3607%" y="559.50"></text></g><g><title>AppKit`-[NSWindow(NSDisplayCycle) _postWindowNeedsDisplay] (25 samples, 0.12%)</title><rect x="81.1107%" y="565" width="0.1206%" height="15" fill="rgb(235,213,38)" fg:x="16811" fg:w="25"/><text x="81.3607%" y="575.50"></text></g><g><title>AppKit`-[NSView setNeedsDisplayInRect:] (26 samples, 0.13%)</title><rect x="81.1107%" y="597" width="0.1254%" height="15" fill="rgb(237,122,38)" fg:x="16811" fg:w="26"/><text x="81.3607%" y="607.50"></text></g><g><title>AppKit`NSViewSetNeedsUpdateVibrancy (26 samples, 0.13%)</title><rect x="81.1107%" y="581" width="0.1254%" height="15" fill="rgb(244,218,35)" fg:x="16811" fg:w="26"/><text x="81.3607%" y="591.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (3 samples, 0.01%)</title><rect x="81.2651%" y="405" width="0.0145%" height="15" fill="rgb(240,68,47)" fg:x="16843" fg:w="3"/><text x="81.5151%" y="415.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (3 samples, 0.01%)</title><rect x="81.2651%" y="389" width="0.0145%" height="15" fill="rgb(210,16,53)" fg:x="16843" fg:w="3"/><text x="81.5151%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (3 samples, 0.01%)</title><rect x="81.2651%" y="373" width="0.0145%" height="15" fill="rgb(235,124,12)" fg:x="16843" fg:w="3"/><text x="81.5151%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (3 samples, 0.01%)</title><rect x="81.2651%" y="357" width="0.0145%" height="15" fill="rgb(224,169,11)" fg:x="16843" fg:w="3"/><text x="81.5151%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.01%)</title><rect x="81.2651%" y="341" width="0.0145%" height="15" fill="rgb(250,166,2)" fg:x="16843" fg:w="3"/><text x="81.5151%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (5 samples, 0.02%)</title><rect x="81.2603%" y="485" width="0.0241%" height="15" fill="rgb(242,216,29)" fg:x="16842" fg:w="5"/><text x="81.5103%" y="495.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (5 samples, 0.02%)</title><rect x="81.2603%" y="469" width="0.0241%" height="15" fill="rgb(230,116,27)" fg:x="16842" fg:w="5"/><text x="81.5103%" y="479.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (5 samples, 0.02%)</title><rect x="81.2603%" y="453" width="0.0241%" height="15" fill="rgb(228,99,48)" fg:x="16842" fg:w="5"/><text x="81.5103%" y="463.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (5 samples, 0.02%)</title><rect x="81.2603%" y="437" width="0.0241%" height="15" fill="rgb(253,11,6)" fg:x="16842" fg:w="5"/><text x="81.5103%" y="447.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (5 samples, 0.02%)</title><rect x="81.2603%" y="421" width="0.0241%" height="15" fill="rgb(247,143,39)" fg:x="16842" fg:w="5"/><text x="81.5103%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.02%)</title><rect x="81.2892%" y="421" width="0.0193%" height="15" fill="rgb(236,97,10)" fg:x="16848" fg:w="4"/><text x="81.5392%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (4 samples, 0.02%)</title><rect x="81.2892%" y="405" width="0.0193%" height="15" fill="rgb(233,208,19)" fg:x="16848" fg:w="4"/><text x="81.5392%" y="415.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext deferredEndEncoding:] (4 samples, 0.02%)</title><rect x="81.3326%" y="277" width="0.0193%" height="15" fill="rgb(216,164,2)" fg:x="16857" fg:w="4"/><text x="81.5826%" y="287.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer commitEncoder] (5 samples, 0.02%)</title><rect x="81.3326%" y="293" width="0.0241%" height="15" fill="rgb(220,129,5)" fg:x="16857" fg:w="5"/><text x="81.5826%" y="303.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commit] (5 samples, 0.02%)</title><rect x="81.3567%" y="277" width="0.0241%" height="15" fill="rgb(242,17,10)" fg:x="16862" fg:w="5"/><text x="81.6067%" y="287.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCommit:commitTime:] (5 samples, 0.02%)</title><rect x="81.3567%" y="261" width="0.0241%" height="15" fill="rgb(242,107,0)" fg:x="16862" fg:w="5"/><text x="81.6067%" y="271.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (5 samples, 0.02%)</title><rect x="81.3567%" y="245" width="0.0241%" height="15" fill="rgb(251,28,31)" fg:x="16862" fg:w="5"/><text x="81.6067%" y="255.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (5 samples, 0.02%)</title><rect x="81.3567%" y="229" width="0.0241%" height="15" fill="rgb(233,223,10)" fg:x="16862" fg:w="5"/><text x="81.6067%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (5 samples, 0.02%)</title><rect x="81.3567%" y="213" width="0.0241%" height="15" fill="rgb(215,21,27)" fg:x="16862" fg:w="5"/><text x="81.6067%" y="223.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (4 samples, 0.02%)</title><rect x="81.3809%" y="261" width="0.0193%" height="15" fill="rgb(232,23,21)" fg:x="16867" fg:w="4"/><text x="81.6309%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (4 samples, 0.02%)</title><rect x="81.3809%" y="245" width="0.0193%" height="15" fill="rgb(244,5,23)" fg:x="16867" fg:w="4"/><text x="81.6309%" y="255.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer commit] (15 samples, 0.07%)</title><rect x="81.3326%" y="309" width="0.0724%" height="15" fill="rgb(226,81,46)" fg:x="16857" fg:w="15"/><text x="81.5826%" y="319.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer commit] (10 samples, 0.05%)</title><rect x="81.3567%" y="293" width="0.0482%" height="15" fill="rgb(247,70,30)" fg:x="16862" fg:w="10"/><text x="81.6067%" y="303.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (5 samples, 0.02%)</title><rect x="81.3809%" y="277" width="0.0241%" height="15" fill="rgb(212,68,19)" fg:x="16867" fg:w="5"/><text x="81.6309%" y="287.50"></text></g><g><title>AGXMetalG14G`AGX::DataBufferAllocator&lt;34ul&gt;::initializeDataBuffer (3 samples, 0.01%)</title><rect x="81.4146%" y="245" width="0.0145%" height="15" fill="rgb(240,187,13)" fg:x="16874" fg:w="3"/><text x="81.6646%" y="255.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (3 samples, 0.01%)</title><rect x="81.4146%" y="229" width="0.0145%" height="15" fill="rgb(223,113,26)" fg:x="16874" fg:w="3"/><text x="81.6646%" y="239.50"></text></g><g><title>AGXMetalG14G`AGX::ContextCommon&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::newCommand (4 samples, 0.02%)</title><rect x="81.4146%" y="261" width="0.0193%" height="15" fill="rgb(206,192,2)" fg:x="16874" fg:w="4"/><text x="81.6646%" y="271.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::beginRenderPass (8 samples, 0.04%)</title><rect x="81.4098%" y="277" width="0.0386%" height="15" fill="rgb(241,108,4)" fg:x="16873" fg:w="8"/><text x="81.6598%" y="287.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (16 samples, 0.08%)</title><rect x="81.4050%" y="293" width="0.0772%" height="15" fill="rgb(247,173,49)" fg:x="16872" fg:w="16"/><text x="81.6550%" y="303.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (18 samples, 0.09%)</title><rect x="81.4050%" y="309" width="0.0868%" height="15" fill="rgb(224,114,35)" fg:x="16872" fg:w="18"/><text x="81.6550%" y="319.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyRenderContext drawPrimitives:vertexStart:vertexCount:] (3 samples, 0.01%)</title><rect x="81.5015%" y="309" width="0.0145%" height="15" fill="rgb(245,159,27)" fg:x="16892" fg:w="3"/><text x="81.7515%" y="319.50"></text></g><g><title>AGXMetalG14G`AGX::RenderContext&lt;AGX::G14::Encoders, AGX::G14::Classes, AGX::G14::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G14::VertexProgramVariant const*, AGX::G14::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G14::Encoders, AGX::G14::Classes&gt;&amp;, AGX::RenderDirtyBits (3 samples, 0.01%)</title><rect x="81.5015%" y="293" width="0.0145%" height="15" fill="rgb(245,172,44)" fg:x="16892" fg:w="3"/><text x="81.7515%" y="303.50"></text></g><g><title>AGXMetalG14G`agxaAssertBufferIsValid(unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) (4 samples, 0.02%)</title><rect x="81.5304%" y="261" width="0.0193%" height="15" fill="rgb(236,23,11)" fg:x="16898" fg:w="4"/><text x="81.7804%" y="271.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture replaceRegion:mipmapLevel:withBytes:bytesPerRow:] (14 samples, 0.07%)</title><rect x="81.5304%" y="309" width="0.0675%" height="15" fill="rgb(205,117,38)" fg:x="16898" fg:w="14"/><text x="81.7804%" y="319.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyTexture replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:] (14 samples, 0.07%)</title><rect x="81.5304%" y="293" width="0.0675%" height="15" fill="rgb(237,72,25)" fg:x="16898" fg:w="14"/><text x="81.7804%" y="303.50"></text></g><g><title>AGXMetalG14G`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::writeRegion (14 samples, 0.07%)</title><rect x="81.5304%" y="277" width="0.0675%" height="15" fill="rgb(244,70,9)" fg:x="16898" fg:w="14"/><text x="81.7804%" y="287.50"></text></g><g><title>AGXMetalG14G`void AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G14::Encoders, AGX::G14::Classes&gt;::processCompressedRegion2D&lt;AGX::AppleCompressionGen2::Compressor&lt;(AGX::AppleCompressionGen2::PixelFormat)15, 1u, (unsigned char)1, (AGX::AppleCompressionGen2::SubblockOrder)0, (AGXTextureFootprint)0&gt;, false, (AGXHardwareTextureMemoryOrder)2&gt; (9 samples, 0.04%)</title><rect x="81.5546%" y="261" width="0.0434%" height="15" fill="rgb(217,125,39)" fg:x="16903" fg:w="9"/><text x="81.8046%" y="271.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent initWithOptions:] (9 samples, 0.04%)</title><rect x="81.6076%" y="229" width="0.0434%" height="15" fill="rgb(235,36,10)" fg:x="16914" fg:w="9"/><text x="81.8576%" y="239.50"></text></g><g><title>IOKit`IOConnectCallMethod (9 samples, 0.04%)</title><rect x="81.6076%" y="213" width="0.0434%" height="15" fill="rgb(251,123,47)" fg:x="16914" fg:w="9"/><text x="81.8576%" y="223.50"></text></g><g><title>IOKit`io_connect_method (9 samples, 0.04%)</title><rect x="81.6076%" y="197" width="0.0434%" height="15" fill="rgb(221,13,13)" fg:x="16914" fg:w="9"/><text x="81.8576%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (9 samples, 0.04%)</title><rect x="81.6076%" y="181" width="0.0434%" height="15" fill="rgb(238,131,9)" fg:x="16914" fg:w="9"/><text x="81.8576%" y="191.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable initWithDrawablePrivate:layer:waitStart:] (11 samples, 0.05%)</title><rect x="81.6028%" y="245" width="0.0531%" height="15" fill="rgb(211,50,8)" fg:x="16913" fg:w="11"/><text x="81.8528%" y="255.50"></text></g><g><title>QuartzCore`CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (17 samples, 0.08%)</title><rect x="81.5980%" y="261" width="0.0820%" height="15" fill="rgb(245,182,24)" fg:x="16912" fg:w="17"/><text x="81.8480%" y="271.50"></text></g><g><title>MetalKit`-[MTKView currentRenderPassDescriptor] (18 samples, 0.09%)</title><rect x="81.5980%" y="309" width="0.0868%" height="15" fill="rgb(242,14,37)" fg:x="16912" fg:w="18"/><text x="81.8480%" y="319.50"></text></g><g><title>MetalKit`-[MTKView currentDrawable] (18 samples, 0.09%)</title><rect x="81.5980%" y="293" width="0.0868%" height="15" fill="rgb(246,228,12)" fg:x="16912" fg:w="18"/><text x="81.8480%" y="303.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (18 samples, 0.09%)</title><rect x="81.5980%" y="277" width="0.0868%" height="15" fill="rgb(213,55,15)" fg:x="16912" fg:w="18"/><text x="81.8480%" y="287.50"></text></g><g><title>gameboy-emulator`-[WindowViewController drawInMTKView:] (76 samples, 0.37%)</title><rect x="81.3326%" y="325" width="0.3667%" height="15" fill="rgb(209,9,3)" fg:x="16857" fg:w="76"/><text x="81.5826%" y="335.50"></text></g><g><title>MetalKit`-[MTKView draw] (82 samples, 0.40%)</title><rect x="81.3182%" y="341" width="0.3956%" height="15" fill="rgb(230,59,30)" fg:x="16854" fg:w="82"/><text x="81.5682%" y="351.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (84 samples, 0.41%)</title><rect x="81.3182%" y="421" width="0.4053%" height="15" fill="rgb(209,121,21)" fg:x="16854" fg:w="84"/><text x="81.5682%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (84 samples, 0.41%)</title><rect x="81.3182%" y="405" width="0.4053%" height="15" fill="rgb(220,109,13)" fg:x="16854" fg:w="84"/><text x="81.5682%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (84 samples, 0.41%)</title><rect x="81.3182%" y="389" width="0.4053%" height="15" fill="rgb(232,18,1)" fg:x="16854" fg:w="84"/><text x="81.5682%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (84 samples, 0.41%)</title><rect x="81.3182%" y="373" width="0.4053%" height="15" fill="rgb(215,41,42)" fg:x="16854" fg:w="84"/><text x="81.5682%" y="383.50"></text></g><g><title>MetalKit`__23-[MTKView __initCommon]_block_invoke (84 samples, 0.41%)</title><rect x="81.3182%" y="357" width="0.4053%" height="15" fill="rgb(224,123,36)" fg:x="16854" fg:w="84"/><text x="81.5682%" y="367.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (93 samples, 0.45%)</title><rect x="81.2892%" y="469" width="0.4487%" height="15" fill="rgb(240,125,3)" fg:x="16848" fg:w="93"/><text x="81.5392%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (93 samples, 0.45%)</title><rect x="81.2892%" y="453" width="0.4487%" height="15" fill="rgb(205,98,50)" fg:x="16848" fg:w="93"/><text x="81.5392%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_drain (93 samples, 0.45%)</title><rect x="81.2892%" y="437" width="0.4487%" height="15" fill="rgb(205,185,37)" fg:x="16848" fg:w="93"/><text x="81.5392%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__bsdthread_ctl (3 samples, 0.01%)</title><rect x="81.7234%" y="421" width="0.0145%" height="15" fill="rgb(238,207,15)" fg:x="16938" fg:w="3"/><text x="81.9734%" y="431.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (3 samples, 0.01%)</title><rect x="81.7476%" y="373" width="0.0145%" height="15" fill="rgb(213,199,42)" fg:x="16943" fg:w="3"/><text x="81.9976%" y="383.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (3 samples, 0.01%)</title><rect x="81.7476%" y="357" width="0.0145%" height="15" fill="rgb(235,201,11)" fg:x="16943" fg:w="3"/><text x="81.9976%" y="367.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (3 samples, 0.01%)</title><rect x="81.7476%" y="341" width="0.0145%" height="15" fill="rgb(207,46,11)" fg:x="16943" fg:w="3"/><text x="81.9976%" y="351.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (3 samples, 0.01%)</title><rect x="81.7476%" y="325" width="0.0145%" height="15" fill="rgb(241,35,35)" fg:x="16943" fg:w="3"/><text x="81.9976%" y="335.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (3 samples, 0.01%)</title><rect x="81.7476%" y="309" width="0.0145%" height="15" fill="rgb(243,32,47)" fg:x="16943" fg:w="3"/><text x="81.9976%" y="319.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (3 samples, 0.01%)</title><rect x="81.7476%" y="293" width="0.0145%" height="15" fill="rgb(247,202,23)" fg:x="16943" fg:w="3"/><text x="81.9976%" y="303.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::commit_transaction (3 samples, 0.01%)</title><rect x="81.7476%" y="277" width="0.0145%" height="15" fill="rgb(219,102,11)" fg:x="16943" fg:w="3"/><text x="81.9976%" y="287.50"></text></g><g><title>AppKit`-[NSTextLayer display] (4 samples, 0.02%)</title><rect x="81.7620%" y="357" width="0.0193%" height="15" fill="rgb(243,110,44)" fg:x="16946" fg:w="4"/><text x="82.0120%" y="367.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (4 samples, 0.02%)</title><rect x="81.7620%" y="341" width="0.0193%" height="15" fill="rgb(222,74,54)" fg:x="16946" fg:w="4"/><text x="82.0120%" y="351.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke (4 samples, 0.02%)</title><rect x="81.7620%" y="325" width="0.0193%" height="15" fill="rgb(216,99,12)" fg:x="16946" fg:w="4"/><text x="82.0120%" y="335.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (4 samples, 0.02%)</title><rect x="81.7620%" y="309" width="0.0193%" height="15" fill="rgb(226,22,26)" fg:x="16946" fg:w="4"/><text x="82.0120%" y="319.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke_2 (4 samples, 0.02%)</title><rect x="81.7620%" y="293" width="0.0193%" height="15" fill="rgb(217,163,10)" fg:x="16946" fg:w="4"/><text x="82.0120%" y="303.50"></text></g><g><title>QuartzCore`-[CALayer _display] (4 samples, 0.02%)</title><rect x="81.7620%" y="277" width="0.0193%" height="15" fill="rgb(213,25,53)" fg:x="16946" fg:w="4"/><text x="82.0120%" y="287.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Layer::display_ (4 samples, 0.02%)</title><rect x="81.7620%" y="261" width="0.0193%" height="15" fill="rgb(252,105,26)" fg:x="16946" fg:w="4"/><text x="82.0120%" y="271.50"></text></g><g><title>QuartzCore`CABackingStoreUpdate_ (4 samples, 0.02%)</title><rect x="81.7620%" y="245" width="0.0193%" height="15" fill="rgb(220,39,43)" fg:x="16946" fg:w="4"/><text x="82.0120%" y="255.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (7 samples, 0.03%)</title><rect x="81.7813%" y="341" width="0.0338%" height="15" fill="rgb(229,68,48)" fg:x="16950" fg:w="7"/><text x="82.0313%" y="351.50"></text></g><g><title>AppKit`__29-[NSViewBackingLayer display]_block_invoke (7 samples, 0.03%)</title><rect x="81.7813%" y="325" width="0.0338%" height="15" fill="rgb(252,8,32)" fg:x="16950" fg:w="7"/><text x="82.0313%" y="335.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (7 samples, 0.03%)</title><rect x="81.7813%" y="309" width="0.0338%" height="15" fill="rgb(223,20,43)" fg:x="16950" fg:w="7"/><text x="82.0313%" y="319.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (7 samples, 0.03%)</title><rect x="81.7813%" y="293" width="0.0338%" height="15" fill="rgb(229,81,49)" fg:x="16950" fg:w="7"/><text x="82.0313%" y="303.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (6 samples, 0.03%)</title><rect x="81.7862%" y="277" width="0.0289%" height="15" fill="rgb(236,28,36)" fg:x="16951" fg:w="6"/><text x="82.0362%" y="287.50"></text></g><g><title>AppKit`-[NSLayerContentsProvider facetForIdentifier:scale:colorSpace:drawingRect:flipped:appearanceIdentifier:drawHandler:] (5 samples, 0.02%)</title><rect x="81.7910%" y="261" width="0.0241%" height="15" fill="rgb(249,185,26)" fg:x="16952" fg:w="5"/><text x="82.0410%" y="271.50"></text></g><g><title>AppKit`__50-[_NSThemeWidgetCell updateLayerWithFrame:inView:]_block_invoke (3 samples, 0.01%)</title><rect x="81.8006%" y="245" width="0.0145%" height="15" fill="rgb(249,174,33)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="255.50"></text></g><g><title>AppKit`-[NSAppearance _drawInRect:context:options:] (3 samples, 0.01%)</title><rect x="81.8006%" y="229" width="0.0145%" height="15" fill="rgb(233,201,37)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="239.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (3 samples, 0.01%)</title><rect x="81.8006%" y="213" width="0.0145%" height="15" fill="rgb(221,78,26)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="223.50"></text></g><g><title>CoreUI`CUIDraw (3 samples, 0.01%)</title><rect x="81.8006%" y="197" width="0.0145%" height="15" fill="rgb(250,127,30)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="207.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (3 samples, 0.01%)</title><rect x="81.8006%" y="181" width="0.0145%" height="15" fill="rgb(230,49,44)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="191.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawTitlebarButton (3 samples, 0.01%)</title><rect x="81.8006%" y="165" width="0.0145%" height="15" fill="rgb(229,67,23)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="175.50"></text></g><g><title>CoreUI`-[CUIThemeFacet drawInFrame:isFocused:focusRingColor:context:effects:] (3 samples, 0.01%)</title><rect x="81.8006%" y="149" width="0.0145%" height="15" fill="rgb(249,83,47)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="159.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _drawSpecificRenditionKey:inFrame:context:isFocused:focusRingColor:isFlipped:effects:] (3 samples, 0.01%)</title><rect x="81.8006%" y="133" width="0.0145%" height="15" fill="rgb(215,43,3)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="143.50"></text></g><g><title>CoreUI`DrawOnePartImageWithOperation (3 samples, 0.01%)</title><rect x="81.8006%" y="117" width="0.0145%" height="15" fill="rgb(238,154,13)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="127.50"></text></g><g><title>CoreGraphics`CGContextDrawImage (3 samples, 0.01%)</title><rect x="81.8006%" y="101" width="0.0145%" height="15" fill="rgb(219,56,2)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="111.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (3 samples, 0.01%)</title><rect x="81.8006%" y="85" width="0.0145%" height="15" fill="rgb(233,0,4)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="95.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (3 samples, 0.01%)</title><rect x="81.8006%" y="69" width="0.0145%" height="15" fill="rgb(235,30,7)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="79.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (3 samples, 0.01%)</title><rect x="81.8006%" y="53" width="0.0145%" height="15" fill="rgb(250,79,13)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="63.50"></text></g><g><title>CoreGraphics`CGSImageDataLock (3 samples, 0.01%)</title><rect x="81.8006%" y="37" width="0.0145%" height="15" fill="rgb(211,146,34)" fg:x="16954" fg:w="3"/><text x="82.0506%" y="47.50"></text></g><g><title>AppKit`-[NSViewBackingLayer display] (9 samples, 0.04%)</title><rect x="81.7813%" y="357" width="0.0434%" height="15" fill="rgb(228,22,38)" fg:x="16950" fg:w="9"/><text x="82.0313%" y="367.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (14 samples, 0.07%)</title><rect x="81.7620%" y="373" width="0.0675%" height="15" fill="rgb(235,168,5)" fg:x="16946" fg:w="14"/><text x="82.0120%" y="383.50"></text></g><g><title>QuartzCore`CA::Layer::prepare_commit (3 samples, 0.01%)</title><rect x="81.8296%" y="373" width="0.0145%" height="15" fill="rgb(221,155,16)" fg:x="16960" fg:w="3"/><text x="82.0796%" y="383.50"></text></g><g><title>QuartzCore`CA::Layer::prepare_contents (3 samples, 0.01%)</title><rect x="81.8296%" y="357" width="0.0145%" height="15" fill="rgb(215,215,53)" fg:x="16960" fg:w="3"/><text x="82.0796%" y="367.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (4 samples, 0.02%)</title><rect x="81.8489%" y="373" width="0.0193%" height="15" fill="rgb(223,4,10)" fg:x="16964" fg:w="4"/><text x="82.0989%" y="383.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (26 samples, 0.13%)</title><rect x="81.7476%" y="389" width="0.1254%" height="15" fill="rgb(234,103,6)" fg:x="16943" fg:w="26"/><text x="81.9976%" y="399.50"></text></g><g><title>AppKit`-[NSView displayIfNeeded] (3 samples, 0.01%)</title><rect x="81.8778%" y="309" width="0.0145%" height="15" fill="rgb(227,97,0)" fg:x="16970" fg:w="3"/><text x="82.1278%" y="319.50"></text></g><g><title>AppKit`NSPerformVisuallyAtomicChange (3 samples, 0.01%)</title><rect x="81.8778%" y="293" width="0.0145%" height="15" fill="rgb(234,150,53)" fg:x="16970" fg:w="3"/><text x="82.1278%" y="303.50"></text></g><g><title>AppKit`__25-[NSView displayIfNeeded]_block_invoke (3 samples, 0.01%)</title><rect x="81.8778%" y="277" width="0.0145%" height="15" fill="rgb(228,201,54)" fg:x="16970" fg:w="3"/><text x="82.1278%" y="287.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (3 samples, 0.01%)</title><rect x="81.8923%" y="309" width="0.0145%" height="15" fill="rgb(222,22,37)" fg:x="16973" fg:w="3"/><text x="82.1423%" y="319.50"></text></g><g><title>AppKit`NSViewUpdateVibrancyForSubtree (3 samples, 0.01%)</title><rect x="81.8923%" y="293" width="0.0145%" height="15" fill="rgb(237,53,32)" fg:x="16973" fg:w="3"/><text x="82.1423%" y="303.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForDisplay_block_invoke (7 samples, 0.03%)</title><rect x="81.8778%" y="341" width="0.0338%" height="15" fill="rgb(233,25,53)" fg:x="16970" fg:w="7"/><text x="82.1278%" y="351.50"></text></g><g><title>AppKit`-[NSWindow displayIfNeeded] (7 samples, 0.03%)</title><rect x="81.8778%" y="325" width="0.0338%" height="15" fill="rgb(210,40,34)" fg:x="16970" fg:w="7"/><text x="82.1278%" y="335.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (11 samples, 0.05%)</title><rect x="81.8730%" y="389" width="0.0531%" height="15" fill="rgb(241,220,44)" fg:x="16969" fg:w="11"/><text x="82.1230%" y="399.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (11 samples, 0.05%)</title><rect x="81.8730%" y="373" width="0.0531%" height="15" fill="rgb(235,28,35)" fg:x="16969" fg:w="11"/><text x="82.1230%" y="383.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (10 samples, 0.05%)</title><rect x="81.8778%" y="357" width="0.0482%" height="15" fill="rgb(210,56,17)" fg:x="16970" fg:w="10"/><text x="82.1278%" y="367.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (39 samples, 0.19%)</title><rect x="81.7427%" y="421" width="0.1882%" height="15" fill="rgb(224,130,29)" fg:x="16942" fg:w="39"/><text x="81.9927%" y="431.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (38 samples, 0.18%)</title><rect x="81.7476%" y="405" width="0.1833%" height="15" fill="rgb(235,212,8)" fg:x="16943" fg:w="38"/><text x="81.9976%" y="415.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (41 samples, 0.20%)</title><rect x="81.7379%" y="469" width="0.1978%" height="15" fill="rgb(223,33,50)" fg:x="16941" fg:w="41"/><text x="81.9879%" y="479.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (41 samples, 0.20%)</title><rect x="81.7379%" y="453" width="0.1978%" height="15" fill="rgb(219,149,13)" fg:x="16941" fg:w="41"/><text x="81.9879%" y="463.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (41 samples, 0.20%)</title><rect x="81.7379%" y="437" width="0.1978%" height="15" fill="rgb(250,156,29)" fg:x="16941" fg:w="41"/><text x="81.9879%" y="447.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (142 samples, 0.69%)</title><rect x="81.2892%" y="485" width="0.6851%" height="15" fill="rgb(216,193,19)" fg:x="16848" fg:w="142"/><text x="81.5392%" y="495.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (150 samples, 0.72%)</title><rect x="81.2554%" y="501" width="0.7237%" height="15" fill="rgb(216,135,14)" fg:x="16841" fg:w="150"/><text x="81.5054%" y="511.50"></text></g><g><title>HIToolbox`_FirstEventTime (3 samples, 0.01%)</title><rect x="81.9792%" y="501" width="0.0145%" height="15" fill="rgb(241,47,5)" fg:x="16991" fg:w="3"/><text x="82.2292%" y="511.50"></text></g><g><title>HIToolbox`InitTSMFirstEventTime (3 samples, 0.01%)</title><rect x="81.9792%" y="485" width="0.0145%" height="15" fill="rgb(233,42,35)" fg:x="16991" fg:w="3"/><text x="82.2292%" y="495.50"></text></g><g><title>AppKit`_DPSNextEvent (156 samples, 0.75%)</title><rect x="81.2458%" y="565" width="0.7527%" height="15" fill="rgb(231,13,6)" fg:x="16839" fg:w="156"/><text x="81.4958%" y="575.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (155 samples, 0.75%)</title><rect x="81.2506%" y="549" width="0.7479%" height="15" fill="rgb(207,181,40)" fg:x="16840" fg:w="155"/><text x="81.5006%" y="559.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (155 samples, 0.75%)</title><rect x="81.2506%" y="533" width="0.7479%" height="15" fill="rgb(254,173,49)" fg:x="16840" fg:w="155"/><text x="81.5006%" y="543.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (154 samples, 0.74%)</title><rect x="81.2554%" y="517" width="0.7430%" height="15" fill="rgb(221,1,38)" fg:x="16841" fg:w="154"/><text x="81.5054%" y="527.50"></text></g><g><title>AppKit`___NSAppInstallWindowWillDragEventMonitor_block_invoke (3 samples, 0.01%)</title><rect x="81.9985%" y="549" width="0.0145%" height="15" fill="rgb(206,124,46)" fg:x="16995" fg:w="3"/><text x="82.2485%" y="559.50"></text></g><g><title>AppKit`__43-[NSApplication _handleAppKitDefinedEvent:]_block_invoke (3 samples, 0.01%)</title><rect x="81.9985%" y="533" width="0.0145%" height="15" fill="rgb(249,21,11)" fg:x="16995" fg:w="3"/><text x="82.2485%" y="543.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _updateActiveTrackingAreasForWindowLocation:modifierFlags:] (3 samples, 0.01%)</title><rect x="82.0178%" y="517" width="0.0145%" height="15" fill="rgb(222,201,40)" fg:x="16999" fg:w="3"/><text x="82.2678%" y="527.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _mouseMoved:] (5 samples, 0.02%)</title><rect x="82.0129%" y="533" width="0.0241%" height="15" fill="rgb(235,61,29)" fg:x="16998" fg:w="5"/><text x="82.2629%" y="543.50"></text></g><g><title>AppKit`_NSSendEventToDequeuingObservers (11 samples, 0.05%)</title><rect x="81.9985%" y="565" width="0.0531%" height="15" fill="rgb(219,207,3)" fg:x="16995" fg:w="11"/><text x="82.2485%" y="575.50"></text></g><g><title>AppKit`___installDequeuingEventMonitor_block_invoke (8 samples, 0.04%)</title><rect x="82.0129%" y="549" width="0.0386%" height="15" fill="rgb(222,56,46)" fg:x="16998" fg:w="8"/><text x="82.2629%" y="559.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (172 samples, 0.83%)</title><rect x="81.2410%" y="581" width="0.8299%" height="15" fill="rgb(239,76,54)" fg:x="16838" fg:w="172"/><text x="81.4910%" y="591.50"></text></g><g><title>AppKit`-[NSWindow _windowMovedToRect:dueToMoveEvent:] (3 samples, 0.01%)</title><rect x="82.0950%" y="501" width="0.0145%" height="15" fill="rgb(231,124,27)" fg:x="17015" fg:w="3"/><text x="82.3450%" y="511.50"></text></g><g><title>AppKit`-[NSWindow _setFrameCommon:display:fromServer:] (3 samples, 0.01%)</title><rect x="82.0950%" y="485" width="0.0145%" height="15" fill="rgb(249,195,6)" fg:x="17015" fg:w="3"/><text x="82.3450%" y="495.50"></text></g><g><title>AppKit`-[NSWindow _internalHandleAppKitDefinedEvent:] (4 samples, 0.02%)</title><rect x="82.0950%" y="533" width="0.0193%" height="15" fill="rgb(237,174,47)" fg:x="17015" fg:w="4"/><text x="82.3450%" y="543.50"></text></g><g><title>AppKit`-[NSWindow _windowMoved:] (4 samples, 0.02%)</title><rect x="82.0950%" y="517" width="0.0193%" height="15" fill="rgb(206,201,31)" fg:x="17015" fg:w="4"/><text x="82.3450%" y="527.50"></text></g><g><title>CoreFoundation`CFRunLoopRunInMode (3 samples, 0.01%)</title><rect x="82.1770%" y="341" width="0.0145%" height="15" fill="rgb(231,57,52)" fg:x="17032" fg:w="3"/><text x="82.4270%" y="351.50"></text></g><g><title>CoreFoundation`__CFStringHash (4 samples, 0.02%)</title><rect x="82.2445%" y="293" width="0.0193%" height="15" fill="rgb(248,177,22)" fg:x="17046" fg:w="4"/><text x="82.4945%" y="303.50"></text></g><g><title>CoreFoundation`CFEqual (3 samples, 0.01%)</title><rect x="82.2831%" y="277" width="0.0145%" height="15" fill="rgb(215,211,37)" fg:x="17054" fg:w="3"/><text x="82.5331%" y="287.50"></text></g><g><title>CoreFoundation`CFHash (3 samples, 0.01%)</title><rect x="82.2976%" y="277" width="0.0145%" height="15" fill="rgb(241,128,51)" fg:x="17057" fg:w="3"/><text x="82.5476%" y="287.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (3 samples, 0.01%)</title><rect x="82.2976%" y="261" width="0.0145%" height="15" fill="rgb(227,165,31)" fg:x="17057" fg:w="3"/><text x="82.5476%" y="271.50"></text></g><g><title>CoreFoundation`__CFCheckCFInfoPACSignature_Bridged (4 samples, 0.02%)</title><rect x="82.3169%" y="277" width="0.0193%" height="15" fill="rgb(228,167,24)" fg:x="17061" fg:w="4"/><text x="82.5669%" y="287.50"></text></g><g><title>CoreFoundation`CFSetGetValue (23 samples, 0.11%)</title><rect x="82.2300%" y="309" width="0.1110%" height="15" fill="rgb(228,143,12)" fg:x="17043" fg:w="23"/><text x="82.4800%" y="319.50"></text></g><g><title>CoreFoundation`___CFBasicHashFindBucket_Linear (16 samples, 0.08%)</title><rect x="82.2638%" y="293" width="0.0772%" height="15" fill="rgb(249,149,8)" fg:x="17050" fg:w="16"/><text x="82.5138%" y="303.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (26 samples, 0.13%)</title><rect x="82.2252%" y="325" width="0.1254%" height="15" fill="rgb(243,35,44)" fg:x="17042" fg:w="26"/><text x="82.4752%" y="335.50"></text></g><g><title>CoreFoundation`__CFStringHash (3 samples, 0.01%)</title><rect x="82.3748%" y="277" width="0.0145%" height="15" fill="rgb(246,89,9)" fg:x="17073" fg:w="3"/><text x="82.6248%" y="287.50"></text></g><g><title>CoreFoundation`CFEqual (5 samples, 0.02%)</title><rect x="82.3989%" y="261" width="0.0241%" height="15" fill="rgb(233,213,13)" fg:x="17078" fg:w="5"/><text x="82.6489%" y="271.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (3 samples, 0.01%)</title><rect x="82.4086%" y="245" width="0.0145%" height="15" fill="rgb(233,141,41)" fg:x="17080" fg:w="3"/><text x="82.6586%" y="255.50"></text></g><g><title>CoreFoundation`__CFCheckCFInfoPACSignature_Bridged (4 samples, 0.02%)</title><rect x="82.4279%" y="261" width="0.0193%" height="15" fill="rgb(239,167,4)" fg:x="17084" fg:w="4"/><text x="82.6779%" y="271.50"></text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (23 samples, 0.11%)</title><rect x="82.3555%" y="293" width="0.1110%" height="15" fill="rgb(209,217,16)" fg:x="17069" fg:w="23"/><text x="82.6055%" y="303.50"></text></g><g><title>CoreFoundation`___CFBasicHashFindBucket_Linear (16 samples, 0.08%)</title><rect x="82.3893%" y="277" width="0.0772%" height="15" fill="rgb(219,88,35)" fg:x="17076" fg:w="16"/><text x="82.6393%" y="287.50"></text></g><g><title>CoreFoundation`__CFStringEqual (4 samples, 0.02%)</title><rect x="82.4472%" y="261" width="0.0193%" height="15" fill="rgb(220,193,23)" fg:x="17088" fg:w="4"/><text x="82.6972%" y="271.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (24 samples, 0.12%)</title><rect x="82.3555%" y="309" width="0.1158%" height="15" fill="rgb(230,90,52)" fg:x="17069" fg:w="24"/><text x="82.6055%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeIsEmpty (26 samples, 0.13%)</title><rect x="82.3507%" y="325" width="0.1254%" height="15" fill="rgb(252,106,19)" fg:x="17068" fg:w="26"/><text x="82.6007%" y="335.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (65 samples, 0.31%)</title><rect x="82.1915%" y="341" width="0.3136%" height="15" fill="rgb(206,74,20)" fg:x="17035" fg:w="65"/><text x="82.4415%" y="351.50"></text></g><g><title>CoreFoundation`CFStringCompareWithOptionsAndLocale (3 samples, 0.01%)</title><rect x="82.5147%" y="341" width="0.0145%" height="15" fill="rgb(230,138,44)" fg:x="17102" fg:w="3"/><text x="82.7647%" y="351.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (3 samples, 0.01%)</title><rect x="82.5774%" y="325" width="0.0145%" height="15" fill="rgb(235,182,43)" fg:x="17115" fg:w="3"/><text x="82.8274%" y="335.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (3 samples, 0.01%)</title><rect x="82.5774%" y="309" width="0.0145%" height="15" fill="rgb(242,16,51)" fg:x="17115" fg:w="3"/><text x="82.8274%" y="319.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (9 samples, 0.04%)</title><rect x="82.5533%" y="341" width="0.0434%" height="15" fill="rgb(248,9,4)" fg:x="17110" fg:w="9"/><text x="82.8033%" y="351.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (91 samples, 0.44%)</title><rect x="82.1673%" y="357" width="0.4391%" height="15" fill="rgb(210,31,22)" fg:x="17030" fg:w="91"/><text x="82.4173%" y="367.50"></text></g><g><title>AppKit`_DPSNextEvent (103 samples, 0.50%)</title><rect x="82.1287%" y="405" width="0.4970%" height="15" fill="rgb(239,54,39)" fg:x="17022" fg:w="103"/><text x="82.3787%" y="415.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (103 samples, 0.50%)</title><rect x="82.1287%" y="389" width="0.4970%" height="15" fill="rgb(230,99,41)" fg:x="17022" fg:w="103"/><text x="82.3787%" y="399.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (103 samples, 0.50%)</title><rect x="82.1287%" y="373" width="0.4970%" height="15" fill="rgb(253,106,12)" fg:x="17022" fg:w="103"/><text x="82.3787%" y="383.50"></text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (107 samples, 0.52%)</title><rect x="82.1191%" y="453" width="0.5163%" height="15" fill="rgb(213,46,41)" fg:x="17020" fg:w="107"/><text x="82.3691%" y="463.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) trackEventsMatchingMask:timeout:mode:handler:] (105 samples, 0.51%)</title><rect x="82.1287%" y="437" width="0.5066%" height="15" fill="rgb(215,133,35)" fg:x="17022" fg:w="105"/><text x="82.3787%" y="447.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (105 samples, 0.51%)</title><rect x="82.1287%" y="421" width="0.5066%" height="15" fill="rgb(213,28,5)" fg:x="17022" fg:w="105"/><text x="82.3787%" y="431.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (109 samples, 0.53%)</title><rect x="82.1143%" y="517" width="0.5259%" height="15" fill="rgb(215,77,49)" fg:x="17019" fg:w="109"/><text x="82.3643%" y="527.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (109 samples, 0.53%)</title><rect x="82.1143%" y="501" width="0.5259%" height="15" fill="rgb(248,100,22)" fg:x="17019" fg:w="109"/><text x="82.3643%" y="511.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (109 samples, 0.53%)</title><rect x="82.1143%" y="485" width="0.5259%" height="15" fill="rgb(208,67,9)" fg:x="17019" fg:w="109"/><text x="82.3643%" y="495.50"></text></g><g><title>AppKit`NSControlTrackMouse (109 samples, 0.53%)</title><rect x="82.1143%" y="469" width="0.5259%" height="15" fill="rgb(219,133,21)" fg:x="17019" fg:w="109"/><text x="82.3643%" y="479.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (116 samples, 0.56%)</title><rect x="82.0853%" y="565" width="0.5597%" height="15" fill="rgb(246,46,29)" fg:x="17013" fg:w="116"/><text x="82.3353%" y="575.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (116 samples, 0.56%)</title><rect x="82.0853%" y="549" width="0.5597%" height="15" fill="rgb(246,185,52)" fg:x="17013" fg:w="116"/><text x="82.3353%" y="559.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (110 samples, 0.53%)</title><rect x="82.1143%" y="533" width="0.5307%" height="15" fill="rgb(252,136,11)" fg:x="17019" fg:w="110"/><text x="82.3643%" y="543.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (121 samples, 0.58%)</title><rect x="82.0708%" y="581" width="0.5838%" height="15" fill="rgb(219,138,53)" fg:x="17010" fg:w="121"/><text x="82.3208%" y="591.50"></text></g><g><title>gameboy-emulator`generic_update (296 samples, 1.43%)</title><rect x="81.2410%" y="597" width="1.4282%" height="15" fill="rgb(211,51,23)" fg:x="16838" fg:w="296"/><text x="81.4910%" y="607.50"></text></g><g><title>gameboy-emulator`minifb::os::macos::Window::update_with_buffer_stride (325 samples, 1.57%)</title><rect x="81.1059%" y="629" width="1.5681%" height="15" fill="rgb(247,221,28)" fg:x="16810" fg:w="325"/><text x="81.3559%" y="639.50"></text></g><g><title>gameboy-emulator`mfb_update_with_buffer (325 samples, 1.57%)</title><rect x="81.1059%" y="613" width="1.5681%" height="15" fill="rgb(251,222,45)" fg:x="16810" fg:w="325"/><text x="81.3559%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (46 samples, 0.22%)</title><rect x="82.6836%" y="581" width="0.2219%" height="15" fill="rgb(217,162,53)" fg:x="17137" fg:w="46"/><text x="82.9336%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (44 samples, 0.21%)</title><rect x="82.6932%" y="565" width="0.2123%" height="15" fill="rgb(229,93,14)" fg:x="17139" fg:w="44"/><text x="82.9432%" y="575.50"></text></g><g><title>libsystem_c.dylib`nanosleep (48 samples, 0.23%)</title><rect x="82.6836%" y="597" width="0.2316%" height="15" fill="rgb(209,67,49)" fg:x="17137" fg:w="48"/><text x="82.9336%" y="607.50"></text></g><g><title>gameboy-emulator`std::thread::sleep (78 samples, 0.38%)</title><rect x="82.6739%" y="613" width="0.3763%" height="15" fill="rgb(213,87,29)" fg:x="17135" fg:w="78"/><text x="82.9239%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (28 samples, 0.14%)</title><rect x="82.9152%" y="597" width="0.1351%" height="15" fill="rgb(205,151,52)" fg:x="17185" fg:w="28"/><text x="83.1652%" y="607.50"></text></g><g><title>gameboy-emulator`simple_graphics::display::Display::render (405 samples, 1.95%)</title><rect x="81.1059%" y="645" width="1.9541%" height="15" fill="rgb(253,215,39)" fg:x="16810" fg:w="405"/><text x="81.3559%" y="655.50">g..</text></g><g><title>gameboy-emulator`minifb::rate::UpdateRate::update (80 samples, 0.39%)</title><rect x="82.6739%" y="629" width="0.3860%" height="15" fill="rgb(221,220,41)" fg:x="17135" fg:w="80"/><text x="82.9239%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (28 samples, 0.14%)</title><rect x="83.0599%" y="629" width="0.1351%" height="15" fill="rgb(218,133,21)" fg:x="17215" fg:w="28"/><text x="83.3099%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`madvise (24 samples, 0.12%)</title><rect x="83.0792%" y="613" width="0.1158%" height="15" fill="rgb(221,193,43)" fg:x="17219" fg:w="24"/><text x="83.3292%" y="623.50"></text></g><g><title>gameboy-emulator`simple_graphics::display::Display::set_buffer (29 samples, 0.14%)</title><rect x="83.0599%" y="645" width="0.1399%" height="15" fill="rgb(240,128,52)" fg:x="17215" fg:w="29"/><text x="83.3099%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_free (603 samples, 2.91%)</title><rect x="83.1998%" y="645" width="2.9094%" height="15" fill="rgb(253,114,12)" fg:x="17244" fg:w="603"/><text x="83.4498%" y="655.50">li..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (48 samples, 0.23%)</title><rect x="86.1092%" y="645" width="0.2316%" height="15" fill="rgb(215,223,47)" fg:x="17847" fg:w="48"/><text x="86.3592%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (67 samples, 0.32%)</title><rect x="86.3457%" y="645" width="0.3233%" height="15" fill="rgb(248,225,23)" fg:x="17896" fg:w="67"/><text x="86.5957%" y="655.50"></text></g><g><title>gameboy-emulator`gameboy_emulator::main (18,060 samples, 87.14%)</title><rect x="0.0000%" y="661" width="87.1369%" height="15" fill="rgb(250,108,0)" fg:x="0" fg:w="18060"/><text x="0.2500%" y="671.50">gameboy-emulator`gameboy_emulator::main</text></g><g><title>libsystem_platform.dylib`_platform_memmove (95 samples, 0.46%)</title><rect x="86.6786%" y="645" width="0.4584%" height="15" fill="rgb(228,208,7)" fg:x="17965" fg:w="95"/><text x="86.9286%" y="655.50"></text></g><g><title>gameboy-emulator`main (18,154 samples, 87.59%)</title><rect x="0.0000%" y="725" width="87.5905%" height="15" fill="rgb(244,45,10)" fg:x="0" fg:w="18154"/><text x="0.2500%" y="735.50">gameboy-emulator`main</text></g><g><title>gameboy-emulator`std::rt::lang_start_internal (18,154 samples, 87.59%)</title><rect x="0.0000%" y="709" width="87.5905%" height="15" fill="rgb(207,125,25)" fg:x="0" fg:w="18154"/><text x="0.2500%" y="719.50">gameboy-emulator`std::rt::lang_start_internal</text></g><g><title>gameboy-emulator`std::rt::lang_start::_{{closure}} (18,154 samples, 87.59%)</title><rect x="0.0000%" y="693" width="87.5905%" height="15" fill="rgb(210,195,18)" fg:x="0" fg:w="18154"/><text x="0.2500%" y="703.50">gameboy-emulator`std::rt::lang_start::_{{closure}}</text></g><g><title>gameboy-emulator`std::sys_common::backtrace::__rust_begin_short_backtrace (18,154 samples, 87.59%)</title><rect x="0.0000%" y="677" width="87.5905%" height="15" fill="rgb(249,80,12)" fg:x="0" fg:w="18154"/><text x="0.2500%" y="687.50">gameboy-emulator`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>gameboy-emulator`simple_graphics::display::Display::clear (94 samples, 0.45%)</title><rect x="87.1369%" y="661" width="0.4535%" height="15" fill="rgb(221,65,9)" fg:x="18060" fg:w="94"/><text x="87.3869%" y="671.50"></text></g><g><title>dyld`start (18,156 samples, 87.60%)</title><rect x="0.0000%" y="741" width="87.6001%" height="15" fill="rgb(235,49,36)" fg:x="0" fg:w="18156"/><text x="0.2500%" y="751.50">dyld`start</text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (3 samples, 0.01%)</title><rect x="87.6098%" y="741" width="0.0145%" height="15" fill="rgb(225,32,20)" fg:x="18158" fg:w="3"/><text x="87.8598%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (4 samples, 0.02%)</title><rect x="88.1405%" y="725" width="0.0193%" height="15" fill="rgb(215,141,46)" fg:x="18268" fg:w="4"/><text x="88.3905%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (902 samples, 4.35%)</title><rect x="88.1598%" y="725" width="4.3520%" height="15" fill="rgb(250,160,47)" fg:x="18272" fg:w="902"/><text x="88.4098%" y="735.50">libsy..</text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke (3 samples, 0.01%)</title><rect x="92.5504%" y="661" width="0.0145%" height="15" fill="rgb(216,222,40)" fg:x="19182" fg:w="3"/><text x="92.8004%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.01%)</title><rect x="92.5504%" y="645" width="0.0145%" height="15" fill="rgb(234,217,39)" fg:x="19182" fg:w="3"/><text x="92.8004%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.01%)</title><rect x="92.5504%" y="629" width="0.0145%" height="15" fill="rgb(207,178,40)" fg:x="19182" fg:w="3"/><text x="92.8004%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_apply_invoke3 (3 samples, 0.01%)</title><rect x="92.5504%" y="613" width="0.0145%" height="15" fill="rgb(221,136,13)" fg:x="19182" fg:w="3"/><text x="92.8004%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout2 (3 samples, 0.01%)</title><rect x="92.5504%" y="597" width="0.0145%" height="15" fill="rgb(249,199,10)" fg:x="19182" fg:w="3"/><text x="92.8004%" y="607.50"></text></g><g><title>CoreUI`__69-[_CSIRenditionBlockData expandCSIBitmapData:fromSlice:makeReadOnly:]_block_invoke (3 samples, 0.01%)</title><rect x="92.5504%" y="581" width="0.0145%" height="15" fill="rgb(249,222,13)" fg:x="19182" fg:w="3"/><text x="92.8004%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.02%)</title><rect x="92.5504%" y="677" width="0.0241%" height="15" fill="rgb(244,185,38)" fg:x="19182" fg:w="5"/><text x="92.8004%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (6 samples, 0.03%)</title><rect x="92.5504%" y="709" width="0.0289%" height="15" fill="rgb(236,202,9)" fg:x="19182" fg:w="6"/><text x="92.8004%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (6 samples, 0.03%)</title><rect x="92.5504%" y="693" width="0.0289%" height="15" fill="rgb(250,229,37)" fg:x="19182" fg:w="6"/><text x="92.8004%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_mach_msg_drain (4 samples, 0.02%)</title><rect x="92.6566%" y="677" width="0.0193%" height="15" fill="rgb(206,174,23)" fg:x="19204" fg:w="4"/><text x="92.9066%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_mach_msg_recv (6 samples, 0.03%)</title><rect x="92.6759%" y="677" width="0.0289%" height="15" fill="rgb(211,33,43)" fg:x="19208" fg:w="6"/><text x="92.9259%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_merge (6 samples, 0.03%)</title><rect x="92.7048%" y="677" width="0.0289%" height="15" fill="rgb(245,58,50)" fg:x="19214" fg:w="6"/><text x="92.9548%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_push (3 samples, 0.01%)</title><rect x="92.7338%" y="677" width="0.0145%" height="15" fill="rgb(244,68,36)" fg:x="19220" fg:w="3"/><text x="92.9838%" y="687.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (6 samples, 0.03%)</title><rect x="92.7917%" y="629" width="0.0289%" height="15" fill="rgb(232,229,15)" fg:x="19232" fg:w="6"/><text x="93.0417%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (4 samples, 0.02%)</title><rect x="92.8013%" y="613" width="0.0193%" height="15" fill="rgb(254,30,23)" fg:x="19234" fg:w="4"/><text x="93.0513%" y="623.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (14 samples, 0.07%)</title><rect x="92.7868%" y="645" width="0.0675%" height="15" fill="rgb(235,160,14)" fg:x="19231" fg:w="14"/><text x="93.0368%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`malloc_type_calloc (7 samples, 0.03%)</title><rect x="92.8206%" y="629" width="0.0338%" height="15" fill="rgb(212,155,44)" fg:x="19238" fg:w="7"/><text x="93.0706%" y="639.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_msg_create (17 samples, 0.08%)</title><rect x="92.7820%" y="661" width="0.0820%" height="15" fill="rgb(226,2,50)" fg:x="19230" fg:w="17"/><text x="93.0320%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_merge_msg (24 samples, 0.12%)</title><rect x="92.7531%" y="677" width="0.1158%" height="15" fill="rgb(234,177,6)" fg:x="19224" fg:w="24"/><text x="93.0031%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_wakeup (3 samples, 0.01%)</title><rect x="92.8689%" y="677" width="0.0145%" height="15" fill="rgb(217,24,9)" fg:x="19248" fg:w="3"/><text x="93.1189%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (52 samples, 0.25%)</title><rect x="92.6373%" y="693" width="0.2509%" height="15" fill="rgb(220,13,46)" fg:x="19200" fg:w="52"/><text x="92.8873%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_merge_msg (4 samples, 0.02%)</title><rect x="92.9268%" y="693" width="0.0193%" height="15" fill="rgb(239,221,27)" fg:x="19260" fg:w="4"/><text x="93.1768%" y="703.50"></text></g><g><title>CoreFoundation`+[NSSet setWithArray:range:copyItems:] (3 samples, 0.01%)</title><rect x="93.0812%" y="581" width="0.0145%" height="15" fill="rgb(222,198,25)" fg:x="19292" fg:w="3"/><text x="93.3312%" y="591.50"></text></g><g><title>CoreFoundation`-[NSSet initWithArray:range:copyItems:] (3 samples, 0.01%)</title><rect x="93.0812%" y="565" width="0.0145%" height="15" fill="rgb(211,99,13)" fg:x="19292" fg:w="3"/><text x="93.3312%" y="575.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInRange:inArray:range:] (7 samples, 0.03%)</title><rect x="93.0812%" y="597" width="0.0338%" height="15" fill="rgb(232,111,31)" fg:x="19292" fg:w="7"/><text x="93.3312%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (16 samples, 0.08%)</title><rect x="93.1294%" y="533" width="0.0772%" height="15" fill="rgb(245,82,37)" fg:x="19302" fg:w="16"/><text x="93.3794%" y="543.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent dealloc] (17 samples, 0.08%)</title><rect x="93.1294%" y="549" width="0.0820%" height="15" fill="rgb(227,149,46)" fg:x="19302" fg:w="17"/><text x="93.3794%" y="559.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (19 samples, 0.09%)</title><rect x="93.1246%" y="597" width="0.0917%" height="15" fill="rgb(218,36,50)" fg:x="19301" fg:w="19"/><text x="93.3746%" y="607.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (19 samples, 0.09%)</title><rect x="93.1246%" y="581" width="0.0917%" height="15" fill="rgb(226,80,48)" fg:x="19301" fg:w="19"/><text x="93.3746%" y="591.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (18 samples, 0.09%)</title><rect x="93.1294%" y="565" width="0.0868%" height="15" fill="rgb(238,224,15)" fg:x="19302" fg:w="18"/><text x="93.3794%" y="575.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (3 samples, 0.01%)</title><rect x="93.2259%" y="597" width="0.0145%" height="15" fill="rgb(241,136,10)" fg:x="19322" fg:w="3"/><text x="93.4759%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (3 samples, 0.01%)</title><rect x="93.2259%" y="581" width="0.0145%" height="15" fill="rgb(208,32,45)" fg:x="19322" fg:w="3"/><text x="93.4759%" y="591.50"></text></g><g><title>Foundation`+[NSNumber numberWithDouble:] (3 samples, 0.01%)</title><rect x="93.2548%" y="581" width="0.0145%" height="15" fill="rgb(207,135,9)" fg:x="19328" fg:w="3"/><text x="93.5048%" y="591.50"></text></g><g><title>Foundation`-[NSPlaceholderNumber initWithDouble:] (3 samples, 0.01%)</title><rect x="93.2548%" y="565" width="0.0145%" height="15" fill="rgb(206,86,44)" fg:x="19328" fg:w="3"/><text x="93.5048%" y="575.50"></text></g><g><title>CoreFoundation`CFNumberCreate (3 samples, 0.01%)</title><rect x="93.2548%" y="549" width="0.0145%" height="15" fill="rgb(245,177,15)" fg:x="19328" fg:w="3"/><text x="93.5048%" y="559.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateLayerState:block:] (11 samples, 0.05%)</title><rect x="93.2741%" y="565" width="0.0531%" height="15" fill="rgb(206,64,50)" fg:x="19332" fg:w="11"/><text x="93.5241%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (11 samples, 0.05%)</title><rect x="93.2741%" y="549" width="0.0531%" height="15" fill="rgb(234,36,40)" fg:x="19332" fg:w="11"/><text x="93.5241%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (11 samples, 0.05%)</title><rect x="93.2741%" y="533" width="0.0531%" height="15" fill="rgb(213,64,8)" fg:x="19332" fg:w="11"/><text x="93.5241%" y="543.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:] (14 samples, 0.07%)</title><rect x="93.2693%" y="581" width="0.0675%" height="15" fill="rgb(210,75,36)" fg:x="19331" fg:w="14"/><text x="93.5193%" y="591.50"></text></g><g><title>QuartzCore`mark_drawable_finish(CAMetalDrawable*, _CAMetalLayerPrivate*, bool, double) (18 samples, 0.09%)</title><rect x="93.2548%" y="597" width="0.0868%" height="15" fill="rgb(229,88,21)" fg:x="19328" fg:w="18"/><text x="93.5048%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.03%)</title><rect x="93.3513%" y="597" width="0.0289%" height="15" fill="rgb(252,204,47)" fg:x="19348" fg:w="6"/><text x="93.6013%" y="607.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, double, void*) (73 samples, 0.35%)</title><rect x="93.0715%" y="613" width="0.3522%" height="15" fill="rgb(208,77,27)" fg:x="19290" fg:w="73"/><text x="93.3215%" y="623.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_with_name_impl (5 samples, 0.02%)</title><rect x="93.3996%" y="597" width="0.0241%" height="15" fill="rgb(221,76,26)" fg:x="19358" fg:w="5"/><text x="93.6496%" y="607.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (5 samples, 0.02%)</title><rect x="93.3996%" y="581" width="0.0241%" height="15" fill="rgb(225,139,18)" fg:x="19358" fg:w="5"/><text x="93.6496%" y="591.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (4 samples, 0.02%)</title><rect x="93.4044%" y="565" width="0.0193%" height="15" fill="rgb(230,137,11)" fg:x="19359" fg:w="4"/><text x="93.6544%" y="575.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (84 samples, 0.41%)</title><rect x="93.0522%" y="629" width="0.4053%" height="15" fill="rgb(212,28,1)" fg:x="19286" fg:w="84"/><text x="93.3022%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.03%)</title><rect x="93.4237%" y="613" width="0.0338%" height="15" fill="rgb(248,164,17)" fg:x="19363" fg:w="7"/><text x="93.6737%" y="623.50"></text></g><g><title>CoreFoundation`-[NSDictionary allValues] (6 samples, 0.03%)</title><rect x="93.5299%" y="581" width="0.0289%" height="15" fill="rgb(222,171,42)" fg:x="19385" fg:w="6"/><text x="93.7799%" y="591.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (3 samples, 0.01%)</title><rect x="93.5685%" y="581" width="0.0145%" height="15" fill="rgb(243,84,45)" fg:x="19393" fg:w="3"/><text x="93.8185%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.01%)</title><rect x="93.5685%" y="565" width="0.0145%" height="15" fill="rgb(252,49,23)" fg:x="19393" fg:w="3"/><text x="93.8185%" y="575.50"></text></g><g><title>CoreFoundation`-[__NSCFNumber unsignedLongLongValue] (3 samples, 0.01%)</title><rect x="93.5878%" y="581" width="0.0145%" height="15" fill="rgb(215,19,7)" fg:x="19397" fg:w="3"/><text x="93.8378%" y="591.50"></text></g><g><title>CoreFoundation`CFNumberGetValue (3 samples, 0.01%)</title><rect x="93.5878%" y="565" width="0.0145%" height="15" fill="rgb(238,81,41)" fg:x="19397" fg:w="3"/><text x="93.8378%" y="575.50"></text></g><g><title>CoreFoundation`_CFRelease (3 samples, 0.01%)</title><rect x="93.6119%" y="581" width="0.0145%" height="15" fill="rgb(210,199,37)" fg:x="19402" fg:w="3"/><text x="93.8619%" y="591.50"></text></g><g><title>CoreFoundation`CFNumberCreate (3 samples, 0.01%)</title><rect x="93.6360%" y="533" width="0.0145%" height="15" fill="rgb(244,192,49)" fg:x="19407" fg:w="3"/><text x="93.8860%" y="543.50"></text></g><g><title>Foundation`+[NSNumber numberWithDouble:] (4 samples, 0.02%)</title><rect x="93.6360%" y="565" width="0.0193%" height="15" fill="rgb(226,211,11)" fg:x="19407" fg:w="4"/><text x="93.8860%" y="575.50"></text></g><g><title>Foundation`-[NSPlaceholderNumber initWithDouble:] (4 samples, 0.02%)</title><rect x="93.6360%" y="549" width="0.0193%" height="15" fill="rgb(236,162,54)" fg:x="19407" fg:w="4"/><text x="93.8860%" y="559.50"></text></g><g><title>FramePacing`-[FPCAMetalLayerState previousPresentedLifetimeEnd] (5 samples, 0.02%)</title><rect x="93.6360%" y="581" width="0.0241%" height="15" fill="rgb(220,229,9)" fg:x="19407" fg:w="5"/><text x="93.8860%" y="591.50"></text></g><g><title>CoreFoundation`-[__NSSingleObjectArrayI dealloc] (3 samples, 0.01%)</title><rect x="93.6746%" y="517" width="0.0145%" height="15" fill="rgb(250,87,22)" fg:x="19415" fg:w="3"/><text x="93.9246%" y="527.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (5 samples, 0.02%)</title><rect x="93.6698%" y="565" width="0.0241%" height="15" fill="rgb(239,43,17)" fg:x="19414" fg:w="5"/><text x="93.9198%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (5 samples, 0.02%)</title><rect x="93.6698%" y="549" width="0.0241%" height="15" fill="rgb(231,177,25)" fg:x="19414" fg:w="5"/><text x="93.9198%" y="559.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (4 samples, 0.02%)</title><rect x="93.6746%" y="533" width="0.0193%" height="15" fill="rgb(219,179,1)" fg:x="19415" fg:w="4"/><text x="93.9246%" y="543.50"></text></g><g><title>FramePacing`-[FPInFlightDrawableLifetime dealloc] (6 samples, 0.03%)</title><rect x="93.6698%" y="581" width="0.0289%" height="15" fill="rgb(238,219,53)" fg:x="19414" fg:w="6"/><text x="93.9198%" y="591.50"></text></g><g><title>FramePacing`__142+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:]_block_invoke (43 samples, 0.21%)</title><rect x="93.5154%" y="597" width="0.2075%" height="15" fill="rgb(232,167,36)" fg:x="19382" fg:w="43"/><text x="93.7654%" y="607.50"></text></g><g><title>FramePacing`__65+[FPCAMetalLayerState metalLayer:drawableID:clientPresentedTime:]_block_invoke (6 samples, 0.03%)</title><rect x="93.7229%" y="597" width="0.0289%" height="15" fill="rgb(244,19,51)" fg:x="19425" fg:w="6"/><text x="93.9729%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (15 samples, 0.07%)</title><rect x="93.7615%" y="597" width="0.0724%" height="15" fill="rgb(224,6,22)" fg:x="19433" fg:w="15"/><text x="94.0115%" y="607.50"></text></g><g><title>FramePacing`__47+[FPCAMetalLayerState _updateLayerState:block:]_block_invoke (82 samples, 0.40%)</title><rect x="93.4768%" y="613" width="0.3956%" height="15" fill="rgb(224,145,5)" fg:x="19374" fg:w="82"/><text x="93.7268%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_retain (6 samples, 0.03%)</title><rect x="93.8435%" y="597" width="0.0289%" height="15" fill="rgb(234,130,49)" fg:x="19450" fg:w="6"/><text x="94.0935%" y="607.50"></text></g><g><title>CoreFoundation`_CFNonObjCHash (5 samples, 0.02%)</title><rect x="93.8869%" y="565" width="0.0241%" height="15" fill="rgb(254,6,2)" fg:x="19459" fg:w="5"/><text x="94.1369%" y="575.50"></text></g><g><title>CoreFoundation`__CFNumberHash (3 samples, 0.01%)</title><rect x="93.9110%" y="565" width="0.0145%" height="15" fill="rgb(208,96,46)" fg:x="19464" fg:w="3"/><text x="94.1610%" y="575.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKeyedSubscript:] (12 samples, 0.06%)</title><rect x="93.8773%" y="581" width="0.0579%" height="15" fill="rgb(239,3,39)" fg:x="19457" fg:w="12"/><text x="94.1273%" y="591.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _commandBufferForAddress:] (14 samples, 0.07%)</title><rect x="93.8773%" y="597" width="0.0675%" height="15" fill="rgb(233,210,1)" fg:x="19457" fg:w="14"/><text x="94.1273%" y="607.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKeyedSubscript:] (4 samples, 0.02%)</title><rect x="93.9496%" y="581" width="0.0193%" height="15" fill="rgb(244,137,37)" fg:x="19472" fg:w="4"/><text x="94.1996%" y="591.50"></text></g><g><title>FramePacing`__70+[FPCAMetalLayerState commandBufferCompleted:gpuStartTime:gpuEndTime:]_block_invoke (5 samples, 0.02%)</title><rect x="93.9496%" y="597" width="0.0241%" height="15" fill="rgb(240,136,2)" fg:x="19472" fg:w="5"/><text x="94.1996%" y="607.50"></text></g><g><title>FramePacing`__76+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:]_block_invoke (3 samples, 0.01%)</title><rect x="93.9738%" y="597" width="0.0145%" height="15" fill="rgb(239,18,37)" fg:x="19477" fg:w="3"/><text x="94.2238%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleaseReturnValue (3 samples, 0.01%)</title><rect x="93.9882%" y="597" width="0.0145%" height="15" fill="rgb(218,185,22)" fg:x="19480" fg:w="3"/><text x="94.2382%" y="607.50"></text></g><g><title>FramePacing`__55+[FPCAMetalLayerState _updateCommandBufferState:block:]_block_invoke (30 samples, 0.14%)</title><rect x="93.8724%" y="613" width="0.1447%" height="15" fill="rgb(225,218,4)" fg:x="19456" fg:w="30"/><text x="94.1224%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (120 samples, 0.58%)</title><rect x="93.4575%" y="629" width="0.5790%" height="15" fill="rgb(230,182,32)" fg:x="19370" fg:w="120"/><text x="93.7075%" y="639.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (3 samples, 0.01%)</title><rect x="94.0461%" y="597" width="0.0145%" height="15" fill="rgb(242,56,43)" fg:x="19492" fg:w="3"/><text x="94.2961%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (6 samples, 0.03%)</title><rect x="94.0461%" y="613" width="0.0289%" height="15" fill="rgb(233,99,24)" fg:x="19492" fg:w="6"/><text x="94.2961%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (3 samples, 0.01%)</title><rect x="94.0606%" y="597" width="0.0145%" height="15" fill="rgb(234,209,42)" fg:x="19495" fg:w="3"/><text x="94.3106%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.01%)</title><rect x="94.0751%" y="613" width="0.0145%" height="15" fill="rgb(227,7,12)" fg:x="19498" fg:w="3"/><text x="94.3251%" y="623.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (7 samples, 0.03%)</title><rect x="94.1040%" y="565" width="0.0338%" height="15" fill="rgb(245,203,43)" fg:x="19504" fg:w="7"/><text x="94.3540%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (4 samples, 0.02%)</title><rect x="94.1185%" y="549" width="0.0193%" height="15" fill="rgb(238,205,33)" fg:x="19507" fg:w="4"/><text x="94.3685%" y="559.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (3 samples, 0.01%)</title><rect x="94.1233%" y="533" width="0.0145%" height="15" fill="rgb(231,56,7)" fg:x="19508" fg:w="3"/><text x="94.3733%" y="543.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (13 samples, 0.06%)</title><rect x="94.0895%" y="613" width="0.0627%" height="15" fill="rgb(244,186,29)" fg:x="19501" fg:w="13"/><text x="94.3395%" y="623.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (10 samples, 0.05%)</title><rect x="94.1040%" y="597" width="0.0482%" height="15" fill="rgb(234,111,31)" fg:x="19504" fg:w="10"/><text x="94.3540%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (10 samples, 0.05%)</title><rect x="94.1040%" y="581" width="0.0482%" height="15" fill="rgb(241,149,10)" fg:x="19504" fg:w="10"/><text x="94.3540%" y="591.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (28 samples, 0.14%)</title><rect x="94.0365%" y="629" width="0.1351%" height="15" fill="rgb(249,206,44)" fg:x="19490" fg:w="28"/><text x="94.2865%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.02%)</title><rect x="94.1523%" y="613" width="0.0193%" height="15" fill="rgb(251,153,30)" fg:x="19514" fg:w="4"/><text x="94.4023%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (235 samples, 1.13%)</title><rect x="93.0426%" y="645" width="1.1338%" height="15" fill="rgb(239,152,38)" fg:x="19284" fg:w="235"/><text x="93.2926%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_unote_update (3 samples, 0.01%)</title><rect x="94.2246%" y="597" width="0.0145%" height="15" fill="rgb(249,139,47)" fg:x="19529" fg:w="3"/><text x="94.4746%" y="607.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (3 samples, 0.01%)</title><rect x="94.2439%" y="565" width="0.0145%" height="15" fill="rgb(244,64,35)" fg:x="19533" fg:w="3"/><text x="94.4939%" y="575.50"></text></g><g><title>IOKit`__IODataQueueDequeue (5 samples, 0.02%)</title><rect x="94.2922%" y="517" width="0.0241%" height="15" fill="rgb(216,46,15)" fg:x="19543" fg:w="5"/><text x="94.5422%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (21 samples, 0.10%)</title><rect x="94.3211%" y="469" width="0.1013%" height="15" fill="rgb(250,74,19)" fg:x="19549" fg:w="21"/><text x="94.5711%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (20 samples, 0.10%)</title><rect x="94.3260%" y="453" width="0.0965%" height="15" fill="rgb(249,42,33)" fg:x="19550" fg:w="20"/><text x="94.5760%" y="463.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (25 samples, 0.12%)</title><rect x="94.3163%" y="485" width="0.1206%" height="15" fill="rgb(242,149,17)" fg:x="19548" fg:w="25"/><text x="94.5663%" y="495.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:] (26 samples, 0.13%)</title><rect x="94.3163%" y="501" width="0.1254%" height="15" fill="rgb(244,29,21)" fg:x="19548" fg:w="26"/><text x="94.5663%" y="511.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable presentWithOptions:] (3 samples, 0.01%)</title><rect x="94.4514%" y="469" width="0.0145%" height="15" fill="rgb(220,130,37)" fg:x="19576" fg:w="3"/><text x="94.7014%" y="479.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState metalLayer:drawableID:clientPresentedTime:] (3 samples, 0.01%)</title><rect x="94.4948%" y="437" width="0.0145%" height="15" fill="rgb(211,67,2)" fg:x="19585" fg:w="3"/><text x="94.7448%" y="447.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateLayerState:block:] (3 samples, 0.01%)</title><rect x="94.4948%" y="421" width="0.0145%" height="15" fill="rgb(235,68,52)" fg:x="19585" fg:w="3"/><text x="94.7448%" y="431.50"></text></g><g><title>libdispatch.dylib`dispatch_async (3 samples, 0.01%)</title><rect x="94.4948%" y="405" width="0.0145%" height="15" fill="rgb(246,142,3)" fg:x="19585" fg:w="3"/><text x="94.7448%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (3 samples, 0.01%)</title><rect x="94.4948%" y="389" width="0.0145%" height="15" fill="rgb(241,25,7)" fg:x="19585" fg:w="3"/><text x="94.7448%" y="399.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (3 samples, 0.01%)</title><rect x="94.4948%" y="373" width="0.0145%" height="15" fill="rgb(242,119,39)" fg:x="19585" fg:w="3"/><text x="94.7448%" y="383.50"></text></g><g><title>IOSurface`IOSurfaceClientSignalEvent (35 samples, 0.17%)</title><rect x="94.5141%" y="437" width="0.1689%" height="15" fill="rgb(241,98,45)" fg:x="19589" fg:w="35"/><text x="94.7641%" y="447.50"></text></g><g><title>IOKit`IOConnectCallMethod (35 samples, 0.17%)</title><rect x="94.5141%" y="421" width="0.1689%" height="15" fill="rgb(254,28,30)" fg:x="19589" fg:w="35"/><text x="94.7641%" y="431.50"></text></g><g><title>IOKit`io_connect_method (34 samples, 0.16%)</title><rect x="94.5190%" y="405" width="0.1640%" height="15" fill="rgb(241,142,54)" fg:x="19590" fg:w="34"/><text x="94.7690%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (34 samples, 0.16%)</title><rect x="94.5190%" y="389" width="0.1640%" height="15" fill="rgb(222,85,15)" fg:x="19590" fg:w="34"/><text x="94.7690%" y="399.50"></text></g><g><title>CoreFoundation`CFArrayAppendValue (3 samples, 0.01%)</title><rect x="94.6878%" y="421" width="0.0145%" height="15" fill="rgb(210,85,47)" fg:x="19625" fg:w="3"/><text x="94.9378%" y="431.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (3 samples, 0.01%)</title><rect x="94.6878%" y="405" width="0.0145%" height="15" fill="rgb(224,206,25)" fg:x="19625" fg:w="3"/><text x="94.9378%" y="415.50"></text></g><g><title>IOKit`IOConnectCallMethod (15 samples, 0.07%)</title><rect x="94.7023%" y="421" width="0.0724%" height="15" fill="rgb(243,201,19)" fg:x="19628" fg:w="15"/><text x="94.9523%" y="431.50"></text></g><g><title>IOKit`io_connect_method (15 samples, 0.07%)</title><rect x="94.7023%" y="405" width="0.0724%" height="15" fill="rgb(236,59,4)" fg:x="19628" fg:w="15"/><text x="94.9523%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (15 samples, 0.07%)</title><rect x="94.7023%" y="389" width="0.0724%" height="15" fill="rgb(254,179,45)" fg:x="19628" fg:w="15"/><text x="94.9523%" y="399.50"></text></g><g><title>IOSurface`IOSurfaceSharedEventNotifyEventListener (21 samples, 0.10%)</title><rect x="94.6830%" y="437" width="0.1013%" height="15" fill="rgb(226,14,10)" fg:x="19624" fg:w="21"/><text x="94.9330%" y="447.50"></text></g><g><title>QuartzCore`layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, double, unsigned int) (66 samples, 0.32%)</title><rect x="94.4852%" y="453" width="0.3184%" height="15" fill="rgb(244,27,41)" fg:x="19583" fg:w="66"/><text x="94.7352%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (4 samples, 0.02%)</title><rect x="94.7843%" y="437" width="0.0193%" height="15" fill="rgb(235,35,32)" fg:x="19645" fg:w="4"/><text x="95.0343%" y="447.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (78 samples, 0.38%)</title><rect x="94.4659%" y="469" width="0.3763%" height="15" fill="rgb(218,68,31)" fg:x="19579" fg:w="78"/><text x="94.7159%" y="479.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_with_name_impl (6 samples, 0.03%)</title><rect x="94.8133%" y="453" width="0.0289%" height="15" fill="rgb(207,120,37)" fg:x="19651" fg:w="6"/><text x="95.0633%" y="463.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (5 samples, 0.02%)</title><rect x="94.8181%" y="437" width="0.0241%" height="15" fill="rgb(227,98,0)" fg:x="19652" fg:w="5"/><text x="95.0681%" y="447.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (4 samples, 0.02%)</title><rect x="94.8229%" y="421" width="0.0193%" height="15" fill="rgb(207,7,3)" fg:x="19653" fg:w="4"/><text x="95.0729%" y="431.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (85 samples, 0.41%)</title><rect x="94.4466%" y="485" width="0.4101%" height="15" fill="rgb(206,98,19)" fg:x="19575" fg:w="85"/><text x="94.6966%" y="495.50"></text></g><g><title>Metal`MTLDispatchListApply (91 samples, 0.44%)</title><rect x="94.4466%" y="501" width="0.4391%" height="15" fill="rgb(217,5,26)" fg:x="19575" fg:w="91"/><text x="94.6966%" y="511.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (4 samples, 0.02%)</title><rect x="94.8664%" y="485" width="0.0193%" height="15" fill="rgb(235,190,38)" fg:x="19662" fg:w="4"/><text x="95.1164%" y="495.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (3 samples, 0.01%)</title><rect x="94.8712%" y="469" width="0.0145%" height="15" fill="rgb(247,86,24)" fg:x="19663" fg:w="3"/><text x="95.1212%" y="479.50"></text></g><g><title>Metal`__destroy_helper_block_e8_32o40o48o (3 samples, 0.01%)</title><rect x="94.8712%" y="453" width="0.0145%" height="15" fill="rgb(205,101,16)" fg:x="19663" fg:w="3"/><text x="95.1212%" y="463.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (119 samples, 0.57%)</title><rect x="94.3163%" y="517" width="0.5742%" height="15" fill="rgb(246,168,33)" fg:x="19548" fg:w="119"/><text x="94.5663%" y="527.50"></text></g><g><title>FramePacing`FPCommandBufferCompleted (3 samples, 0.01%)</title><rect x="94.9291%" y="485" width="0.0145%" height="15" fill="rgb(231,114,1)" fg:x="19675" fg:w="3"/><text x="95.1791%" y="495.50"></text></g><g><title>IOGPU`IOGPUMetalPooledResourceRelease (9 samples, 0.04%)</title><rect x="94.9628%" y="437" width="0.0434%" height="15" fill="rgb(207,184,53)" fg:x="19682" fg:w="9"/><text x="95.2128%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_opt_isKindOfClass (5 samples, 0.02%)</title><rect x="95.0063%" y="437" width="0.0241%" height="15" fill="rgb(224,95,51)" fg:x="19691" fg:w="5"/><text x="95.2563%" y="447.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageReleaseCurrentResources (16 samples, 0.08%)</title><rect x="94.9628%" y="453" width="0.0772%" height="15" fill="rgb(212,188,45)" fg:x="19682" fg:w="16"/><text x="95.2128%" y="463.50"></text></g><g><title>Metal`-[MTLResourceList releaseAllObjectsAndReset] (3 samples, 0.01%)</title><rect x="95.0400%" y="453" width="0.0145%" height="15" fill="rgb(223,154,38)" fg:x="19698" fg:w="3"/><text x="95.2900%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_release (3 samples, 0.01%)</title><rect x="95.0400%" y="437" width="0.0145%" height="15" fill="rgb(251,22,52)" fg:x="19698" fg:w="3"/><text x="95.2900%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_release (3 samples, 0.01%)</title><rect x="95.0593%" y="453" width="0.0145%" height="15" fill="rgb(229,209,22)" fg:x="19702" fg:w="3"/><text x="95.3093%" y="463.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (67 samples, 0.32%)</title><rect x="94.9532%" y="469" width="0.3233%" height="15" fill="rgb(234,138,34)" fg:x="19680" fg:w="67"/><text x="95.2032%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (40 samples, 0.19%)</title><rect x="95.0835%" y="453" width="0.1930%" height="15" fill="rgb(212,95,11)" fg:x="19707" fg:w="40"/><text x="95.3335%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.02%)</title><rect x="95.2861%" y="469" width="0.0241%" height="15" fill="rgb(240,179,47)" fg:x="19749" fg:w="5"/><text x="95.5361%" y="479.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (79 samples, 0.38%)</title><rect x="94.9435%" y="485" width="0.3812%" height="15" fill="rgb(240,163,11)" fg:x="19678" fg:w="79"/><text x="95.1935%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (82 samples, 0.40%)</title><rect x="95.3633%" y="437" width="0.3956%" height="15" fill="rgb(236,37,12)" fg:x="19765" fg:w="82"/><text x="95.6133%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (82 samples, 0.40%)</title><rect x="95.3633%" y="421" width="0.3956%" height="15" fill="rgb(232,164,16)" fg:x="19765" fg:w="82"/><text x="95.6133%" y="431.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (3 samples, 0.01%)</title><rect x="95.7734%" y="389" width="0.0145%" height="15" fill="rgb(244,205,15)" fg:x="19850" fg:w="3"/><text x="96.0234%" y="399.50"></text></g><g><title>libdispatch.dylib`dispatch_async (10 samples, 0.05%)</title><rect x="95.7590%" y="437" width="0.0482%" height="15" fill="rgb(223,117,47)" fg:x="19847" fg:w="10"/><text x="96.0090%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (7 samples, 0.03%)</title><rect x="95.7734%" y="421" width="0.0338%" height="15" fill="rgb(244,107,35)" fg:x="19850" fg:w="7"/><text x="96.0234%" y="431.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (7 samples, 0.03%)</title><rect x="95.7734%" y="405" width="0.0338%" height="15" fill="rgb(205,140,8)" fg:x="19850" fg:w="7"/><text x="96.0234%" y="415.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (95 samples, 0.46%)</title><rect x="95.3585%" y="453" width="0.4584%" height="15" fill="rgb(228,84,46)" fg:x="19764" fg:w="95"/><text x="95.6085%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.01%)</title><rect x="95.8217%" y="453" width="0.0145%" height="15" fill="rgb(254,188,9)" fg:x="19860" fg:w="3"/><text x="96.0717%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_release (3 samples, 0.01%)</title><rect x="95.8410%" y="453" width="0.0145%" height="15" fill="rgb(206,112,54)" fg:x="19864" fg:w="3"/><text x="96.0910%" y="463.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCompleted:gpuStartTime:gpuEndTime:] (105 samples, 0.51%)</title><rect x="95.3585%" y="469" width="0.5066%" height="15" fill="rgb(216,84,49)" fg:x="19764" fg:w="105"/><text x="95.6085%" y="479.50"></text></g><g><title>IOAccelerator`IOAccelInitCommPage (3 samples, 0.01%)</title><rect x="95.8651%" y="469" width="0.0145%" height="15" fill="rgb(214,194,35)" fg:x="19869" fg:w="3"/><text x="96.1151%" y="479.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (3 samples, 0.01%)</title><rect x="95.8940%" y="421" width="0.0145%" height="15" fill="rgb(249,28,3)" fg:x="19875" fg:w="3"/><text x="96.1440%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (3 samples, 0.01%)</title><rect x="95.8940%" y="405" width="0.0145%" height="15" fill="rgb(222,56,52)" fg:x="19875" fg:w="3"/><text x="96.1440%" y="415.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (3 samples, 0.01%)</title><rect x="95.8940%" y="389" width="0.0145%" height="15" fill="rgb(245,217,50)" fg:x="19875" fg:w="3"/><text x="96.1440%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (5 samples, 0.02%)</title><rect x="95.8940%" y="437" width="0.0241%" height="15" fill="rgb(213,201,24)" fg:x="19875" fg:w="5"/><text x="96.1440%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.02%)</title><rect x="95.9326%" y="421" width="0.0241%" height="15" fill="rgb(248,116,28)" fg:x="19883" fg:w="5"/><text x="96.1826%" y="431.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (7 samples, 0.03%)</title><rect x="95.9278%" y="437" width="0.0338%" height="15" fill="rgb(219,72,43)" fg:x="19882" fg:w="7"/><text x="96.1778%" y="447.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (18 samples, 0.09%)</title><rect x="95.8844%" y="453" width="0.0868%" height="15" fill="rgb(209,138,14)" fg:x="19873" fg:w="18"/><text x="96.1344%" y="463.50"></text></g><g><title>Metal`MTLDispatchListApply (19 samples, 0.09%)</title><rect x="95.8844%" y="469" width="0.0917%" height="15" fill="rgb(222,18,33)" fg:x="19873" fg:w="19"/><text x="96.1344%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_opt_self (5 samples, 0.02%)</title><rect x="95.9905%" y="469" width="0.0241%" height="15" fill="rgb(213,199,7)" fg:x="19895" fg:w="5"/><text x="96.2405%" y="479.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (147 samples, 0.71%)</title><rect x="95.3247%" y="485" width="0.7093%" height="15" fill="rgb(250,110,10)" fg:x="19757" fg:w="147"/><text x="95.5747%" y="495.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (235 samples, 1.13%)</title><rect x="94.9194%" y="501" width="1.1338%" height="15" fill="rgb(248,123,6)" fg:x="19673" fg:w="235"/><text x="95.1694%" y="511.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (252 samples, 1.22%)</title><rect x="94.8905%" y="517" width="1.2159%" height="15" fill="rgb(206,91,31)" fg:x="19667" fg:w="252"/><text x="95.1405%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.03%)</title><rect x="96.1160%" y="517" width="0.0289%" height="15" fill="rgb(211,154,13)" fg:x="19921" fg:w="6"/><text x="96.3660%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (4 samples, 0.02%)</title><rect x="96.1449%" y="501" width="0.0193%" height="15" fill="rgb(225,148,7)" fg:x="19927" fg:w="4"/><text x="96.3949%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (3 samples, 0.01%)</title><rect x="96.1498%" y="485" width="0.0145%" height="15" fill="rgb(220,160,43)" fg:x="19928" fg:w="3"/><text x="96.3998%" y="495.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyDevice alertCommandBufferActivityComplete] (4 samples, 0.02%)</title><rect x="96.1835%" y="469" width="0.0193%" height="15" fill="rgb(213,52,39)" fg:x="19935" fg:w="4"/><text x="96.4335%" y="479.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (4 samples, 0.02%)</title><rect x="96.2077%" y="421" width="0.0193%" height="15" fill="rgb(243,137,7)" fg:x="19940" fg:w="4"/><text x="96.4577%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (4 samples, 0.02%)</title><rect x="96.2077%" y="405" width="0.0193%" height="15" fill="rgb(230,79,13)" fg:x="19940" fg:w="4"/><text x="96.4577%" y="415.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (14 samples, 0.07%)</title><rect x="96.2077%" y="437" width="0.0675%" height="15" fill="rgb(247,105,23)" fg:x="19940" fg:w="14"/><text x="96.4577%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.04%)</title><rect x="96.2366%" y="421" width="0.0386%" height="15" fill="rgb(223,179,41)" fg:x="19946" fg:w="8"/><text x="96.4866%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.02%)</title><rect x="96.2559%" y="405" width="0.0193%" height="15" fill="rgb(218,9,34)" fg:x="19950" fg:w="4"/><text x="96.5059%" y="415.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (16 samples, 0.08%)</title><rect x="96.2028%" y="453" width="0.0772%" height="15" fill="rgb(222,106,8)" fg:x="19939" fg:w="16"/><text x="96.4528%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer dealloc] (18 samples, 0.09%)</title><rect x="96.2028%" y="469" width="0.0868%" height="15" fill="rgb(211,220,0)" fg:x="19939" fg:w="18"/><text x="96.4528%" y="479.50"></text></g><g><title>AGXMetalG14G`-[AGXG14GFamilyCommandBuffer dealloc] (29 samples, 0.14%)</title><rect x="96.1691%" y="485" width="0.1399%" height="15" fill="rgb(229,52,16)" fg:x="19932" fg:w="29"/><text x="96.4191%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.02%)</title><rect x="96.3138%" y="485" width="0.0193%" height="15" fill="rgb(212,155,18)" fg:x="19962" fg:w="4"/><text x="96.5638%" y="495.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (39 samples, 0.19%)</title><rect x="96.1691%" y="501" width="0.1882%" height="15" fill="rgb(242,21,14)" fg:x="19932" fg:w="39"/><text x="96.4191%" y="511.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (45 samples, 0.22%)</title><rect x="96.1449%" y="517" width="0.2171%" height="15" fill="rgb(222,19,48)" fg:x="19927" fg:w="45"/><text x="96.3949%" y="527.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (437 samples, 2.11%)</title><rect x="94.2632%" y="533" width="2.1085%" height="15" fill="rgb(232,45,27)" fg:x="19537" fg:w="437"/><text x="94.5132%" y="543.50">I..</text></g><g><title>IOKit`IODataQueueDequeue (3 samples, 0.01%)</title><rect x="96.3717%" y="533" width="0.0145%" height="15" fill="rgb(249,103,42)" fg:x="19974" fg:w="3"/><text x="96.6217%" y="543.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (3 samples, 0.01%)</title><rect x="96.3958%" y="533" width="0.0145%" height="15" fill="rgb(246,81,33)" fg:x="19979" fg:w="3"/><text x="96.6458%" y="543.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (451 samples, 2.18%)</title><rect x="94.2632%" y="549" width="2.1760%" height="15" fill="rgb(252,33,42)" fg:x="19537" fg:w="451"/><text x="94.5132%" y="559.50">I..</text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.01%)</title><rect x="96.4248%" y="533" width="0.0145%" height="15" fill="rgb(209,212,41)" fg:x="19985" fg:w="3"/><text x="96.6748%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (453 samples, 2.19%)</title><rect x="94.2584%" y="565" width="2.1857%" height="15" fill="rgb(207,154,6)" fg:x="19536" fg:w="453"/><text x="94.5084%" y="575.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (457 samples, 2.20%)</title><rect x="94.2439%" y="581" width="2.2050%" height="15" fill="rgb(223,64,47)" fg:x="19533" fg:w="457"/><text x="94.4939%" y="591.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (459 samples, 2.21%)</title><rect x="94.2391%" y="597" width="2.2146%" height="15" fill="rgb(211,161,38)" fg:x="19532" fg:w="459"/><text x="94.4891%" y="607.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (473 samples, 2.28%)</title><rect x="94.1764%" y="645" width="2.2822%" height="15" fill="rgb(219,138,40)" fg:x="19519" fg:w="473"/><text x="94.4264%" y="655.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (472 samples, 2.28%)</title><rect x="94.1812%" y="629" width="2.2773%" height="15" fill="rgb(241,228,46)" fg:x="19520" fg:w="472"/><text x="94.4312%" y="639.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (471 samples, 2.27%)</title><rect x="94.1860%" y="613" width="2.2725%" height="15" fill="rgb(223,209,38)" fg:x="19521" fg:w="471"/><text x="94.4360%" y="623.50">l..</text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (174 samples, 0.84%)</title><rect x="96.5309%" y="549" width="0.8395%" height="15" fill="rgb(236,164,45)" fg:x="20007" fg:w="174"/><text x="96.7809%" y="559.50"></text></g><g><title>IOKit`iokit_user_client_trap (172 samples, 0.83%)</title><rect x="96.5406%" y="533" width="0.8299%" height="15" fill="rgb(231,15,5)" fg:x="20009" fg:w="172"/><text x="96.7906%" y="543.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (177 samples, 0.85%)</title><rect x="96.5261%" y="581" width="0.8540%" height="15" fill="rgb(252,35,15)" fg:x="20006" fg:w="177"/><text x="96.7761%" y="591.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (176 samples, 0.85%)</title><rect x="96.5309%" y="565" width="0.8492%" height="15" fill="rgb(248,181,18)" fg:x="20007" fg:w="176"/><text x="96.7809%" y="575.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInRange:inArray:range:] (3 samples, 0.01%)</title><rect x="97.4525%" y="517" width="0.0145%" height="15" fill="rgb(233,39,42)" fg:x="20198" fg:w="3"/><text x="97.7025%" y="527.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (10 samples, 0.05%)</title><rect x="97.4477%" y="533" width="0.0482%" height="15" fill="rgb(238,110,33)" fg:x="20197" fg:w="10"/><text x="97.6977%" y="543.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (14 samples, 0.07%)</title><rect x="97.4332%" y="549" width="0.0675%" height="15" fill="rgb(233,195,10)" fg:x="20194" fg:w="14"/><text x="97.6832%" y="559.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (15 samples, 0.07%)</title><rect x="97.4332%" y="565" width="0.0724%" height="15" fill="rgb(254,105,3)" fg:x="20194" fg:w="15"/><text x="97.6832%" y="575.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (15 samples, 0.07%)</title><rect x="97.5055%" y="565" width="0.0724%" height="15" fill="rgb(221,225,9)" fg:x="20209" fg:w="15"/><text x="97.7555%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (15 samples, 0.07%)</title><rect x="97.5055%" y="549" width="0.0724%" height="15" fill="rgb(224,227,45)" fg:x="20209" fg:w="15"/><text x="97.7555%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (15 samples, 0.07%)</title><rect x="97.5055%" y="533" width="0.0724%" height="15" fill="rgb(229,198,43)" fg:x="20209" fg:w="15"/><text x="97.7555%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (19 samples, 0.09%)</title><rect x="97.5827%" y="565" width="0.0917%" height="15" fill="rgb(206,209,35)" fg:x="20225" fg:w="19"/><text x="97.8327%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (19 samples, 0.09%)</title><rect x="97.5827%" y="549" width="0.0917%" height="15" fill="rgb(245,195,53)" fg:x="20225" fg:w="19"/><text x="97.8327%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (19 samples, 0.09%)</title><rect x="97.5827%" y="533" width="0.0917%" height="15" fill="rgb(240,92,26)" fg:x="20225" fg:w="19"/><text x="97.8327%" y="543.50"></text></g><g><title>QuartzCore`invocation function for block in CA::MachPortUtil::ClientIPC::create (59 samples, 0.28%)</title><rect x="97.3994%" y="581" width="0.2847%" height="15" fill="rgb(207,40,23)" fg:x="20187" fg:w="59"/><text x="97.6494%" y="591.50"></text></g><g><title>IOSurface`_iosRemoveEventBlock (4 samples, 0.02%)</title><rect x="97.7468%" y="517" width="0.0193%" height="15" fill="rgb(223,111,35)" fg:x="20259" fg:w="4"/><text x="97.9968%" y="527.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (3 samples, 0.01%)</title><rect x="97.7516%" y="501" width="0.0145%" height="15" fill="rgb(229,147,28)" fg:x="20260" fg:w="3"/><text x="98.0016%" y="511.50"></text></g><g><title>CoreFoundation`-[NSArray initWithArray:range:copyItems:] (3 samples, 0.01%)</title><rect x="97.8095%" y="501" width="0.0145%" height="15" fill="rgb(211,29,28)" fg:x="20272" fg:w="3"/><text x="98.0595%" y="511.50"></text></g><g><title>QuartzCore`CA::Context::Generic::release (4 samples, 0.02%)</title><rect x="97.8578%" y="501" width="0.0193%" height="15" fill="rgb(228,72,33)" fg:x="20282" fg:w="4"/><text x="98.1078%" y="511.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (79 samples, 0.38%)</title><rect x="97.9350%" y="485" width="0.3812%" height="15" fill="rgb(205,214,31)" fg:x="20298" fg:w="79"/><text x="98.1850%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (75 samples, 0.36%)</title><rect x="97.9543%" y="469" width="0.3619%" height="15" fill="rgb(224,111,15)" fg:x="20302" fg:w="75"/><text x="98.2043%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (74 samples, 0.36%)</title><rect x="97.9591%" y="453" width="0.3570%" height="15" fill="rgb(253,21,26)" fg:x="20303" fg:w="74"/><text x="98.2091%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (72 samples, 0.35%)</title><rect x="97.9687%" y="437" width="0.3474%" height="15" fill="rgb(245,139,43)" fg:x="20305" fg:w="72"/><text x="98.2187%" y="447.50"></text></g><g><title>QuartzCore`x_hash_table_lookup (4 samples, 0.02%)</title><rect x="98.3161%" y="485" width="0.0193%" height="15" fill="rgb(252,170,7)" fg:x="20377" fg:w="4"/><text x="98.5661%" y="495.50"></text></g><g><title>libdispatch.dylib`firehose_buffer_ring_enqueue (3 samples, 0.01%)</title><rect x="98.3837%" y="421" width="0.0145%" height="15" fill="rgb(231,118,14)" fg:x="20391" fg:w="3"/><text x="98.6337%" y="431.50"></text></g><g><title>libdispatch.dylib`firehose_send_push_async (3 samples, 0.01%)</title><rect x="98.3837%" y="405" width="0.0145%" height="15" fill="rgb(238,83,0)" fg:x="20391" fg:w="3"/><text x="98.6337%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (3 samples, 0.01%)</title><rect x="98.3837%" y="389" width="0.0145%" height="15" fill="rgb(221,39,39)" fg:x="20391" fg:w="3"/><text x="98.6337%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (3 samples, 0.01%)</title><rect x="98.3837%" y="373" width="0.0145%" height="15" fill="rgb(222,119,46)" fg:x="20391" fg:w="3"/><text x="98.6337%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.01%)</title><rect x="98.3837%" y="357" width="0.0145%" height="15" fill="rgb(222,165,49)" fg:x="20391" fg:w="3"/><text x="98.6337%" y="367.50"></text></g><g><title>libdispatch.dylib`voucher_activity_trace_v_2 (8 samples, 0.04%)</title><rect x="98.3644%" y="437" width="0.0386%" height="15" fill="rgb(219,113,52)" fg:x="20387" fg:w="8"/><text x="98.6144%" y="447.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_with_name_impl (15 samples, 0.07%)</title><rect x="98.3402%" y="485" width="0.0724%" height="15" fill="rgb(214,7,15)" fg:x="20382" fg:w="15"/><text x="98.5902%" y="495.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (14 samples, 0.07%)</title><rect x="98.3451%" y="469" width="0.0675%" height="15" fill="rgb(235,32,4)" fg:x="20383" fg:w="14"/><text x="98.5951%" y="479.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (13 samples, 0.06%)</title><rect x="98.3499%" y="453" width="0.0627%" height="15" fill="rgb(238,90,54)" fg:x="20384" fg:w="13"/><text x="98.5999%" y="463.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (112 samples, 0.54%)</title><rect x="97.8819%" y="501" width="0.5404%" height="15" fill="rgb(213,208,19)" fg:x="20287" fg:w="112"/><text x="98.1319%" y="511.50"></text></g><g><title>QuartzCore`layer_collectable_signal(_CAImageQueue*, void*) (.11158) (6 samples, 0.03%)</title><rect x="98.4223%" y="501" width="0.0289%" height="15" fill="rgb(233,156,4)" fg:x="20399" fg:w="6"/><text x="98.6723%" y="511.50"></text></g><g><title>Foundation`+[NSNumber numberWithDouble:] (4 samples, 0.02%)</title><rect x="98.4512%" y="485" width="0.0193%" height="15" fill="rgb(207,194,5)" fg:x="20405" fg:w="4"/><text x="98.7012%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (12 samples, 0.06%)</title><rect x="98.4705%" y="453" width="0.0579%" height="15" fill="rgb(206,111,30)" fg:x="20409" fg:w="12"/><text x="98.7205%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (11 samples, 0.05%)</title><rect x="98.4753%" y="437" width="0.0531%" height="15" fill="rgb(243,70,54)" fg:x="20410" fg:w="11"/><text x="98.7253%" y="447.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateLayerState:block:] (14 samples, 0.07%)</title><rect x="98.4705%" y="469" width="0.0675%" height="15" fill="rgb(242,28,8)" fg:x="20409" fg:w="14"/><text x="98.7205%" y="479.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:] (15 samples, 0.07%)</title><rect x="98.4705%" y="485" width="0.0724%" height="15" fill="rgb(219,106,18)" fg:x="20409" fg:w="15"/><text x="98.7205%" y="495.50"></text></g><g><title>QuartzCore`mark_drawable_finish(CAMetalDrawable*, _CAMetalLayerPrivate*, bool, double) (23 samples, 0.11%)</title><rect x="98.4512%" y="501" width="0.1110%" height="15" fill="rgb(244,222,10)" fg:x="20405" fg:w="23"/><text x="98.7012%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.04%)</title><rect x="98.5622%" y="501" width="0.0386%" height="15" fill="rgb(236,179,52)" fg:x="20428" fg:w="8"/><text x="98.8122%" y="511.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (172 samples, 0.83%)</title><rect x="97.7950%" y="517" width="0.8299%" height="15" fill="rgb(213,23,39)" fg:x="20269" fg:w="172"/><text x="98.0450%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (11 samples, 0.05%)</title><rect x="98.6346%" y="517" width="0.0531%" height="15" fill="rgb(238,48,10)" fg:x="20443" fg:w="11"/><text x="98.8846%" y="527.50"></text></g><g><title>IOSurface`_ioSurfaceEventNotificationCallback2 (204 samples, 0.98%)</title><rect x="97.7178%" y="533" width="0.9843%" height="15" fill="rgb(251,196,23)" fg:x="20253" fg:w="204"/><text x="97.9678%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (4 samples, 0.02%)</title><rect x="98.7262%" y="517" width="0.0193%" height="15" fill="rgb(250,152,24)" fg:x="20462" fg:w="4"/><text x="98.9762%" y="527.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent dealloc] (24 samples, 0.12%)</title><rect x="98.7455%" y="485" width="0.1158%" height="15" fill="rgb(209,150,17)" fg:x="20466" fg:w="24"/><text x="98.9955%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (24 samples, 0.12%)</title><rect x="98.7455%" y="469" width="0.1158%" height="15" fill="rgb(234,202,34)" fg:x="20466" fg:w="24"/><text x="98.9955%" y="479.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (3 samples, 0.01%)</title><rect x="98.8613%" y="485" width="0.0145%" height="15" fill="rgb(253,148,53)" fg:x="20490" fg:w="3"/><text x="99.1113%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (3 samples, 0.01%)</title><rect x="98.8613%" y="469" width="0.0145%" height="15" fill="rgb(218,129,16)" fg:x="20490" fg:w="3"/><text x="99.1113%" y="479.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (28 samples, 0.14%)</title><rect x="98.7455%" y="501" width="0.1351%" height="15" fill="rgb(216,85,19)" fg:x="20466" fg:w="28"/><text x="98.9955%" y="511.50"></text></g><g><title>IOKit`_IODispatchCalloutWithDispatch (245 samples, 1.18%)</title><rect x="97.7130%" y="565" width="1.1821%" height="15" fill="rgb(235,228,7)" fg:x="20252" fg:w="245"/><text x="97.9630%" y="575.50"></text></g><g><title>IOKit`IODispatchCalloutFromCFMessage (245 samples, 1.18%)</title><rect x="97.7130%" y="549" width="1.1821%" height="15" fill="rgb(245,175,0)" fg:x="20252" fg:w="245"/><text x="97.9630%" y="559.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (37 samples, 0.18%)</title><rect x="98.7166%" y="533" width="0.1785%" height="15" fill="rgb(208,168,36)" fg:x="20460" fg:w="37"/><text x="98.9666%" y="543.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (31 samples, 0.15%)</title><rect x="98.7455%" y="517" width="0.1496%" height="15" fill="rgb(246,171,24)" fg:x="20466" fg:w="31"/><text x="98.9955%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (63 samples, 0.30%)</title><rect x="98.8951%" y="565" width="0.3040%" height="15" fill="rgb(215,142,24)" fg:x="20497" fg:w="63"/><text x="99.1451%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (63 samples, 0.30%)</title><rect x="98.8951%" y="549" width="0.3040%" height="15" fill="rgb(250,187,7)" fg:x="20497" fg:w="63"/><text x="99.1451%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (61 samples, 0.29%)</title><rect x="98.9048%" y="533" width="0.2943%" height="15" fill="rgb(228,66,33)" fg:x="20499" fg:w="61"/><text x="99.1548%" y="543.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (315 samples, 1.52%)</title><rect x="97.6889%" y="581" width="1.5198%" height="15" fill="rgb(234,215,21)" fg:x="20247" fg:w="315"/><text x="97.9389%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (31 samples, 0.15%)</title><rect x="99.2135%" y="581" width="0.1496%" height="15" fill="rgb(222,191,20)" fg:x="20563" fg:w="31"/><text x="99.4635%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (591 samples, 2.85%)</title><rect x="96.5165%" y="597" width="2.8515%" height="15" fill="rgb(245,79,54)" fg:x="20004" fg:w="591"/><text x="96.7665%" y="607.50">li..</text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (604 samples, 2.91%)</title><rect x="96.4634%" y="645" width="2.9142%" height="15" fill="rgb(240,10,37)" fg:x="19993" fg:w="604"/><text x="96.7134%" y="655.50">li..</text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (599 samples, 2.89%)</title><rect x="96.4875%" y="629" width="2.8901%" height="15" fill="rgb(214,192,32)" fg:x="19998" fg:w="599"/><text x="96.7375%" y="639.50">li..</text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (598 samples, 2.89%)</title><rect x="96.4923%" y="613" width="2.8853%" height="15" fill="rgb(209,36,54)" fg:x="19999" fg:w="598"/><text x="96.7423%" y="623.50">li..</text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (1,324 samples, 6.39%)</title><rect x="92.9991%" y="661" width="6.3881%" height="15" fill="rgb(220,10,11)" fg:x="19275" fg:w="1324"/><text x="93.2491%" y="671.50">libdispa..</text></g><g><title>CoreFoundation`-[__NSArrayI_Transfer dealloc] (3 samples, 0.01%)</title><rect x="99.4017%" y="613" width="0.0145%" height="15" fill="rgb(221,106,17)" fg:x="20602" fg:w="3"/><text x="99.6517%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.01%)</title><rect x="99.4017%" y="597" width="0.0145%" height="15" fill="rgb(251,142,44)" fg:x="20602" fg:w="3"/><text x="99.6517%" y="607.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (5 samples, 0.02%)</title><rect x="99.3969%" y="629" width="0.0241%" height="15" fill="rgb(238,13,15)" fg:x="20601" fg:w="5"/><text x="99.6469%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_pop (8 samples, 0.04%)</title><rect x="99.3872%" y="661" width="0.0386%" height="15" fill="rgb(208,107,27)" fg:x="20599" fg:w="8"/><text x="99.6372%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (7 samples, 0.03%)</title><rect x="99.3921%" y="645" width="0.0338%" height="15" fill="rgb(205,136,37)" fg:x="20600" fg:w="7"/><text x="99.6421%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (9 samples, 0.04%)</title><rect x="99.4258%" y="661" width="0.0434%" height="15" fill="rgb(250,205,27)" fg:x="20607" fg:w="9"/><text x="99.6758%" y="671.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::push (8 samples, 0.04%)</title><rect x="99.4307%" y="645" width="0.0386%" height="15" fill="rgb(210,80,43)" fg:x="20608" fg:w="8"/><text x="99.6807%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (1,349 samples, 6.51%)</title><rect x="92.9654%" y="677" width="6.5087%" height="15" fill="rgb(247,160,36)" fg:x="19268" fg:w="1349"/><text x="93.2154%" y="687.50">libdispat..</text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (1,355 samples, 6.54%)</title><rect x="92.9557%" y="693" width="6.5377%" height="15" fill="rgb(234,13,49)" fg:x="19266" fg:w="1355"/><text x="93.2057%" y="703.50">libdispat..</text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (4 samples, 0.02%)</title><rect x="99.4741%" y="677" width="0.0193%" height="15" fill="rgb(234,122,0)" fg:x="20617" fg:w="4"/><text x="99.7241%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (2,465 samples, 11.89%)</title><rect x="87.6339%" y="741" width="11.8933%" height="15" fill="rgb(207,146,38)" fg:x="18163" fg:w="2465"/><text x="87.8839%" y="751.50">libsystem_pthread...</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (1,453 samples, 7.01%)</title><rect x="92.5166%" y="725" width="7.0105%" height="15" fill="rgb(207,177,25)" fg:x="19175" fg:w="1453"/><text x="92.7666%" y="735.50">libsystem..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (1,440 samples, 6.95%)</title><rect x="92.5794%" y="709" width="6.9478%" height="15" fill="rgb(211,178,42)" fg:x="19188" fg:w="1440"/><text x="92.8294%" y="719.50">libdispat..</text></g><g><title>CoreFoundation`_CFRelease (4 samples, 0.02%)</title><rect x="99.5416%" y="613" width="0.0193%" height="15" fill="rgb(230,69,54)" fg:x="20631" fg:w="4"/><text x="99.7916%" y="623.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (4 samples, 0.02%)</title><rect x="99.5416%" y="597" width="0.0193%" height="15" fill="rgb(214,135,41)" fg:x="20631" fg:w="4"/><text x="99.7916%" y="607.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (4 samples, 0.02%)</title><rect x="99.5416%" y="581" width="0.0193%" height="15" fill="rgb(237,67,25)" fg:x="20631" fg:w="4"/><text x="99.7916%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (4 samples, 0.02%)</title><rect x="99.5416%" y="565" width="0.0193%" height="15" fill="rgb(222,189,50)" fg:x="20631" fg:w="4"/><text x="99.7916%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.02%)</title><rect x="99.5416%" y="549" width="0.0193%" height="15" fill="rgb(245,148,34)" fg:x="20631" fg:w="4"/><text x="99.7916%" y="559.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseEventLog::getLogString (3 samples, 0.01%)</title><rect x="99.5947%" y="533" width="0.0145%" height="15" fill="rgb(222,29,6)" fg:x="20642" fg:w="3"/><text x="99.8447%" y="543.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (3 samples, 0.01%)</title><rect x="99.5947%" y="517" width="0.0145%" height="15" fill="rgb(221,189,43)" fg:x="20642" fg:w="3"/><text x="99.8447%" y="527.50"></text></g><g><title>SkyLight`CGSEventLogEvent (5 samples, 0.02%)</title><rect x="99.5899%" y="549" width="0.0241%" height="15" fill="rgb(207,36,27)" fg:x="20641" fg:w="5"/><text x="99.8399%" y="559.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (3 samples, 0.01%)</title><rect x="99.6140%" y="533" width="0.0145%" height="15" fill="rgb(217,90,24)" fg:x="20646" fg:w="3"/><text x="99.8640%" y="543.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::~VMData (3 samples, 0.01%)</title><rect x="99.6140%" y="517" width="0.0145%" height="15" fill="rgb(224,66,35)" fg:x="20646" fg:w="3"/><text x="99.8640%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (3 samples, 0.01%)</title><rect x="99.6140%" y="501" width="0.0145%" height="15" fill="rgb(221,13,50)" fg:x="20646" fg:w="3"/><text x="99.8640%" y="511.50"></text></g><g><title>SkyLight`SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda5&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (4 samples, 0.02%)</title><rect x="99.6671%" y="405" width="0.0193%" height="15" fill="rgb(236,68,49)" fg:x="20657" fg:w="4"/><text x="99.9171%" y="415.50"></text></g><g><title>SkyLight`bool SLS::TokenizedCoding::Decoder::invoke_versioned&lt;bool SLS::TokenizedCoding::Decoder::decode_bytes&lt;void (void const*, unsigned long) block_pointer&gt;(unsigned long, void (void const*, unsigned long) block_pointer&amp;&amp;)::&apos;lambda&apos;(void (void const*, unsigned long) block_pointer&amp;)&gt;(void  (4 samples, 0.02%)</title><rect x="99.6671%" y="389" width="0.0193%" height="15" fill="rgb(229,146,28)" fg:x="20657" fg:w="4"/><text x="99.9171%" y="399.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void  (4 samples, 0.02%)</title><rect x="99.6671%" y="373" width="0.0193%" height="15" fill="rgb(225,31,38)" fg:x="20657" fg:w="4"/><text x="99.9171%" y="383.50"></text></g><g><title>SkyLight`invocation function for block in SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda5&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::operator()(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (3 samples, 0.01%)</title><rect x="99.6719%" y="357" width="0.0145%" height="15" fill="rgb(250,208,3)" fg:x="20658" fg:w="3"/><text x="99.9219%" y="367.50"></text></g><g><title>IOKit`__IOHIDEventCreateWithBytesHelper (3 samples, 0.01%)</title><rect x="99.6719%" y="341" width="0.0145%" height="15" fill="rgb(246,54,23)" fg:x="20658" fg:w="3"/><text x="99.9219%" y="351.50"></text></g><g><title>SkyLight`SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (8 samples, 0.04%)</title><rect x="99.6864%" y="405" width="0.0386%" height="15" fill="rgb(243,76,11)" fg:x="20661" fg:w="8"/><text x="99.9364%" y="415.50"></text></g><g><title>SkyLight`bool SLS::TokenizedCoding::Decoder::invoke_versioned&lt;bool SLS::TokenizedCoding::Decoder::decode_bytes&lt;void (void const*, unsigned long) block_pointer&gt;(unsigned long, void (void const*, unsigned long) block_pointer&amp;&amp;)::&apos;lambda&apos;(void (void const*, unsigned long) block_pointer&amp;)&gt;(void  (8 samples, 0.04%)</title><rect x="99.6864%" y="389" width="0.0386%" height="15" fill="rgb(245,21,50)" fg:x="20661" fg:w="8"/><text x="99.9364%" y="399.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void  (8 samples, 0.04%)</title><rect x="99.6864%" y="373" width="0.0386%" height="15" fill="rgb(228,9,43)" fg:x="20661" fg:w="8"/><text x="99.9364%" y="383.50"></text></g><g><title>SkyLight`invocation function for block in SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::operator()(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (8 samples, 0.04%)</title><rect x="99.6864%" y="357" width="0.0386%" height="15" fill="rgb(208,100,47)" fg:x="20661" fg:w="8"/><text x="99.9364%" y="367.50"></text></g><g><title>SkyLight`SLEventAuthenticationMessageCreateWithData (8 samples, 0.04%)</title><rect x="99.6864%" y="341" width="0.0386%" height="15" fill="rgb(232,26,8)" fg:x="20661" fg:w="8"/><text x="99.9364%" y="351.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (7 samples, 0.03%)</title><rect x="99.6912%" y="325" width="0.0338%" height="15" fill="rgb(216,166,38)" fg:x="20662" fg:w="7"/><text x="99.9412%" y="335.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr (6 samples, 0.03%)</title><rect x="99.6960%" y="309" width="0.0289%" height="15" fill="rgb(251,202,51)" fg:x="20663" fg:w="6"/><text x="99.9460%" y="319.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::with_slice_b(unsigned long, void (SLS::TokenizedCoding::VersionedDecoder&lt; (6 samples, 0.03%)</title><rect x="99.6960%" y="293" width="0.0289%" height="15" fill="rgb(254,216,34)" fg:x="20663" fg:w="6"/><text x="99.9460%" y="303.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (5 samples, 0.02%)</title><rect x="99.7009%" y="277" width="0.0241%" height="15" fill="rgb(251,32,27)" fg:x="20664" fg:w="5"/><text x="99.9509%" y="287.50"></text></g><g><title>SkyLight`invocation function for block in auto bool SLS::TokenizedCoding::Decoder::decode_with_manager&lt;(anonymous namespace)::MessageInitDataCustomSerializationBasis::Create(void const*, unsigned long)::$_0&gt;((anonymous namespace)::MessageInitDataCustomSerializationBasis::Create(void const*, unsigned long)::$_0&amp;&amp;)::&apos;lambda&apos;((anonymous namespace)::MessageInitDataCustomSerializationBasis::Create(void const*, unsigned long)::$_0&amp;)::operator()&lt;SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;((anonymous namespace)::MessageInitDataCustomSerializationBasis::Create (5 samples, 0.02%)</title><rect x="99.7009%" y="261" width="0.0241%" height="15" fill="rgb(208,127,28)" fg:x="20664" fg:w="5"/><text x="99.9509%" y="271.50"></text></g><g><title>SkyLight`SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda8&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (6 samples, 0.03%)</title><rect x="99.7250%" y="405" width="0.0289%" height="15" fill="rgb(224,137,22)" fg:x="20669" fg:w="6"/><text x="99.9750%" y="415.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::with_slice_b(unsigned long, void (SLS::TokenizedCoding::VersionedDecoder&lt; (21 samples, 0.10%)</title><rect x="99.6623%" y="453" width="0.1013%" height="15" fill="rgb(254,70,32)" fg:x="20656" fg:w="21"/><text x="99.9123%" y="463.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (20 samples, 0.10%)</title><rect x="99.6671%" y="437" width="0.0965%" height="15" fill="rgb(229,75,37)" fg:x="20657" fg:w="20"/><text x="99.9171%" y="447.50"></text></g><g><title>SkyLight`invocation function for block in auto bool SLS::TokenizedCoding::Decoder::decode_with_manager&lt;_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&gt;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;&amp;)::&apos;lambda&apos;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;)::operator()&lt;SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(_SLEventRecordCreateWithBytesModern (20 samples, 0.10%)</title><rect x="99.6671%" y="421" width="0.0965%" height="15" fill="rgb(252,64,23)" fg:x="20657" fg:w="20"/><text x="99.9171%" y="431.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (26 samples, 0.13%)</title><rect x="99.6430%" y="485" width="0.1254%" height="15" fill="rgb(232,162,48)" fg:x="20652" fg:w="26"/><text x="99.8930%" y="495.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr (24 samples, 0.12%)</title><rect x="99.6526%" y="469" width="0.1158%" height="15" fill="rgb(246,160,12)" fg:x="20654" fg:w="24"/><text x="99.9026%" y="479.50"></text></g><g><title>SkyLight`_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int) (29 samples, 0.14%)</title><rect x="99.6333%" y="501" width="0.1399%" height="15" fill="rgb(247,166,0)" fg:x="20650" fg:w="29"/><text x="99.8833%" y="511.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (31 samples, 0.15%)</title><rect x="99.6285%" y="517" width="0.1496%" height="15" fill="rgb(249,219,21)" fg:x="20649" fg:w="31"/><text x="99.8785%" y="527.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (32 samples, 0.15%)</title><rect x="99.6285%" y="533" width="0.1544%" height="15" fill="rgb(205,209,3)" fg:x="20649" fg:w="32"/><text x="99.8785%" y="543.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (53 samples, 0.26%)</title><rect x="99.6140%" y="549" width="0.2557%" height="15" fill="rgb(243,44,1)" fg:x="20646" fg:w="53"/><text x="99.8640%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (15 samples, 0.07%)</title><rect x="99.7974%" y="533" width="0.0724%" height="15" fill="rgb(206,159,16)" fg:x="20684" fg:w="15"/><text x="100.0474%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (15 samples, 0.07%)</title><rect x="99.7974%" y="517" width="0.0724%" height="15" fill="rgb(244,77,30)" fg:x="20684" fg:w="15"/><text x="100.0474%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (15 samples, 0.07%)</title><rect x="99.7974%" y="501" width="0.0724%" height="15" fill="rgb(218,69,12)" fg:x="20684" fg:w="15"/><text x="100.0474%" y="511.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (64 samples, 0.31%)</title><rect x="99.5658%" y="613" width="0.3088%" height="15" fill="rgb(212,87,7)" fg:x="20636" fg:w="64"/><text x="99.8158%" y="623.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (64 samples, 0.31%)</title><rect x="99.5658%" y="597" width="0.3088%" height="15" fill="rgb(245,114,25)" fg:x="20636" fg:w="64"/><text x="99.8158%" y="607.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (62 samples, 0.30%)</title><rect x="99.5754%" y="581" width="0.2991%" height="15" fill="rgb(210,61,42)" fg:x="20638" fg:w="62"/><text x="99.8254%" y="591.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (60 samples, 0.29%)</title><rect x="99.5851%" y="565" width="0.2895%" height="15" fill="rgb(211,52,33)" fg:x="20640" fg:w="60"/><text x="99.8351%" y="575.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (73 samples, 0.35%)</title><rect x="99.5272%" y="661" width="0.3522%" height="15" fill="rgb(234,58,33)" fg:x="20628" fg:w="73"/><text x="99.7772%" y="671.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (72 samples, 0.35%)</title><rect x="99.5320%" y="645" width="0.3474%" height="15" fill="rgb(220,115,36)" fg:x="20629" fg:w="72"/><text x="99.7820%" y="655.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (72 samples, 0.35%)</title><rect x="99.5320%" y="629" width="0.3474%" height="15" fill="rgb(243,153,54)" fg:x="20629" fg:w="72"/><text x="99.7820%" y="639.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (8 samples, 0.04%)</title><rect x="99.8794%" y="661" width="0.0386%" height="15" fill="rgb(251,47,18)" fg:x="20701" fg:w="8"/><text x="100.1294%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (7 samples, 0.03%)</title><rect x="99.8842%" y="645" width="0.0338%" height="15" fill="rgb(242,102,42)" fg:x="20702" fg:w="7"/><text x="100.1342%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (7 samples, 0.03%)</title><rect x="99.8842%" y="629" width="0.0338%" height="15" fill="rgb(234,31,38)" fg:x="20702" fg:w="7"/><text x="100.1342%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.03%)</title><rect x="99.8890%" y="613" width="0.0289%" height="15" fill="rgb(221,117,51)" fg:x="20703" fg:w="6"/><text x="100.1390%" y="623.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (82 samples, 0.40%)</title><rect x="99.5272%" y="693" width="0.3956%" height="15" fill="rgb(212,20,18)" fg:x="20628" fg:w="82"/><text x="99.7772%" y="703.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (82 samples, 0.40%)</title><rect x="99.5272%" y="677" width="0.3956%" height="15" fill="rgb(245,133,36)" fg:x="20628" fg:w="82"/><text x="99.7772%" y="687.50"></text></g><g><title>AppKit`_NSEventThread (83 samples, 0.40%)</title><rect x="99.5272%" y="709" width="0.4005%" height="15" fill="rgb(212,6,19)" fg:x="20628" fg:w="83"/><text x="99.7772%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_cvwait (13 samples, 0.06%)</title><rect x="99.9325%" y="677" width="0.0627%" height="15" fill="rgb(218,1,36)" fg:x="20712" fg:w="13"/><text x="100.1825%" y="687.50"></text></g><g><title>all (20,726 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(246,84,54)" fg:x="0" fg:w="20726"/><text x="0.2500%" y="767.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (98 samples, 0.47%)</title><rect x="99.5272%" y="741" width="0.4728%" height="15" fill="rgb(242,110,6)" fg:x="20628" fg:w="98"/><text x="99.7772%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (98 samples, 0.47%)</title><rect x="99.5272%" y="725" width="0.4728%" height="15" fill="rgb(214,47,5)" fg:x="20628" fg:w="98"/><text x="99.7772%" y="735.50"></text></g><g><title>CoreVideo`CVDisplayLink::runIOThread (15 samples, 0.07%)</title><rect x="99.9276%" y="709" width="0.0724%" height="15" fill="rgb(218,159,25)" fg:x="20711" fg:w="15"/><text x="100.1776%" y="719.50"></text></g><g><title>CoreVideo`CVDisplayLink::waitUntil (14 samples, 0.07%)</title><rect x="99.9325%" y="693" width="0.0675%" height="15" fill="rgb(215,211,28)" fg:x="20712" fg:w="14"/><text x="100.1825%" y="703.50"></text></g></svg></svg>